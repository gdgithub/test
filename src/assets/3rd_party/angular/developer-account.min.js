/*! developer-account v0.1.0 (minified on 09/06/2016) */

"use strict";!function(window,angular,undefined){angular.module("app.interceptors",[])}(window,window.angular),function(window,angular,undefined){function ReadTokensInterceptorFactory(apiService,tokenCacheService){function readTokens(response){if(apiService.isPost(response)){var csrf=response.headers("csrf"),csrf_ts=response.headers("csrf_ts");csrf&&tokenCacheService.set("csrf",csrf),csrf_ts&&tokenCacheService.set("csrf_ts",csrf_ts)}return response}return{response:readTokens}}angular.module("app.interceptors").factory("ReadTokensInterceptor",ReadTokensInterceptorFactory),ReadTokensInterceptorFactory.$inject=["apiService","tokenCacheService"]}(window,window.angular),function(window,angular,undefined){function WriteTokensInterceptorFactory(apiService,tokenCacheService){function writeTokens(request){if(apiService.isPost(request)){var csrf=tokenCacheService.get("csrf"),csrfTimestamp=tokenCacheService.get("csrf_ts");csrf&&(request.headers.csrf=csrf),csrfTimestamp&&(request.headers.csrf_ts=csrfTimestamp)}return request}return{request:writeTokens}}angular.module("app.interceptors").factory("WriteTokensInterceptor",WriteTokensInterceptorFactory),WriteTokensInterceptorFactory.$inject=["apiService","tokenCacheService"]}(window,window.angular),function(window,angular,undefined){function CheckErrorsInterceptorFactory($window,$location,$q,apiService,paths){function checkErrors(response){if(apiService.isPost(response)&&"object"==typeof response.data&&!apiService.isSuccess(response)){var errorCode=response.data.resultCode,errorKey=KNOWN_ERROR_KEYS[errorCode]||"error.unknown";switch(errorKey){case"authentication.expired":case"authentication.missing":var path=encodeURIComponent($window.location.pathname+$window.location.search);return $window.location.href=paths.logout+"/?return="+path,$q.reject("authentication.expired");case"authentication.unregistered":return $window.location.href=paths.register,$q.reject(errorKey);case"authentication.terminated":return $location.path("/error"),$q.reject(errorKey);case"teams.action.invalid":case"teams.action.ineligible":return $q.reject(errorKey);case"teams.agenttransfer.ineligible":return $q.reject(errorKey);case"teams.invite.emailinvalid":return $q.reject(getAddressStringFromErrorString(response.data.resultString));case"teams.invite.alreadyaccepted":case"teams.invite.alreadyjoined":case"teams.invite.expired":case"teams.invite.invalid":case"teams.invite.notfound":case"teams.invite.withdrawn":return $q.reject(errorKey)}}return response}function getAddressStringFromErrorString(errorString){var addressString;return errorString=errorString.replace(/&#x/g,"%").replace(/;/g,"").replace("&gt",">").replace("&lt","<"),addressString=decodeURIComponent(errorString),addressString=addressString.substr(7),addressString=addressString.substr(0,addressString.length-13)}var KNOWN_ERROR_CODES={"api.unavailable":1001,"api.maintenance":1002,"request.uri.invalid":1003,"request.param.missing":1004,"request.param.invalid":1005,"authentication.expired":1100,"authentication.missing":1101,"authentication.unregistered":2100,"authentication.ineligible":4100,"authentication.terminated":2170,"teams.action.invalid":35,"teams.action.ineligible":1200,"teams.agenttransfer.ineligible":11024,"teams.invite.emailinvalid":11005,"teams.invite.alreadyaccepted":11030,"teams.invite.alreadyjoined":11028,"teams.invite.expired":11031,"teams.invite.invalid":11007,"teams.invite.notfound":11009,"teams.invite.withdrawn":11032},KNOWN_ERROR_KEYS={};return angular.forEach(KNOWN_ERROR_CODES,function(errorCode,errorKey){KNOWN_ERROR_KEYS[errorCode]=errorKey}),{response:checkErrors}}angular.module("app.interceptors").factory("CheckErrorsInterceptor",CheckErrorsInterceptorFactory),CheckErrorsInterceptorFactory.$inject=["$window","$location","$q","apiService","paths"]}(window,window.angular),function(window,angular,undefined){angular.module("app.services",[])}(window,window.angular),function(window,angular,undefined){function apiServiceFactory($window,pathsService){function isGet(requestOrResponse){return isRequestMethod(requestOrResponse,"get")}function isPost(requestOrResponse){return isRequestMethod(requestOrResponse,"post")}function isSuccess(response){return isPost(response)?!(!response.data||response.data.resultCode!==API_SUCCESS_CODE):!0}function getBasepath(){return basepath}function getRequestConfig(headers){var requestConfig={headers:headers};return"application/x-www-form-urlencoded"===headers["Content-Type"]&&(requestConfig.transformRequest=function(requestData){return getUrlEncodedJSONString(requestData)}),requestConfig}function getResponseData(keys,res){"undefined"==typeof res&&(res=keys,keys=[]);var currentKey,data=res.data||{},ret={};if(!keys||0===keys.length)return data;"string"==typeof keys&&(keys=[keys]);for(var index=keys.length,isRequiredKey=!0;--index>-1;)if(currentKey=keys[index],"?"===currentKey.charAt(0)&&(isRequiredKey=!1,currentKey=currentKey.substr(1)),data.hasOwnProperty(currentKey))ret[currentKey]=data[currentKey];else if(isRequiredKey)throw"Invalid response format.";return 1===keys.length?ret[currentKey]:ret}function decodeHtmlEntities(htmlString){var elem=document.createElement("div");return elem.innerHTML=htmlString,elem.textContent}function mapToArray(map,keyPropertyName){"undefined"==typeof keyPropertyName&&(keyPropertyName="key");var array=[];return angular.forEach(map,function(value,key){value[keyPropertyName]=key,array.push(value)}),array}function getDefaultErrorHandler(){return function(responseOrErrorKey){throw"object"==typeof responseOrErrorKey&&responseOrErrorKey.status!==HTTP_SUCCESS_STATUS,responseOrErrorKey}}function init(){paths=pathsService.get(),basepath=paths.services+"/"}function isRequestMethod(requestOrResponse,method){return method=method.toUpperCase(),requestOrResponse.config&&(requestOrResponse=requestOrResponse.config),!(requestOrResponse.method!==method)}function getUrlEncodedJSONString(obj){var params=[];for(var param in obj)obj.hasOwnProperty(param)&&params.push(encodeURIComponent(param)+"="+encodeURIComponent(obj[param]));return params.join("&")}var paths,basepath,HTTP_SUCCESS_STATUS=200,API_SUCCESS_CODE=0;return init(),{isGet:isGet,isPost:isPost,isSuccess:isSuccess,getBasepath:getBasepath,getRequestConfig:getRequestConfig,getResponseData:getResponseData,getDefaultErrorHandler:getDefaultErrorHandler,decodeHtmlEntities:decodeHtmlEntities,mapToArray:mapToArray}}angular.module("app.services").factory("apiService",apiServiceFactory),apiServiceFactory.$inject=["$window","pathsService"]}(window,window.angular),function(window,angular,undefined){function asyncServiceFactory($q,$timeout){function promiseTo(callback,withNetworkDelay){var delay=0;return"undefined"==typeof withNetworkDelay&&(withNetworkDelay=!1),withNetworkDelay&&(delay=getRandomNetworkDelay()),new $q(function(resolve,reject){$timeout(callback.bind(null,resolve,reject),delay)})}function init(){}function getRandomNetworkDelay(){return Math.floor(Math.random()*MAX_NETWORK_DELAY)}var MAX_NETWORK_DELAY=500;return init(),{promiseTo:promiseTo}}angular.module("app.services").factory("asyncService",asyncServiceFactory),asyncServiceFactory.$inject=["$q","$timeout"]}(window,window.angular),function(window,angular,undefined){function emailsServiceFactory($window,$http,$templateCache,$interpolate,$location,apiService){function getTemplate(templateUrl){var requestSettings={cache:$templateCache};return $http.get(templateUrl,requestSettings).then(apiService.getResponseData)["catch"](apiService.getDefaultErrorHandler())}function getRenderedTemplate(templateUrl,scope){return getTemplate(templateUrl).then(function(templateString){return $interpolate(templateString)(scope)})["catch"](apiService.getDefaultErrorHandler())}function compose(parameters){var url=composeUrl(parameters);$window.open(url,"_blank")}function composeUrl(parameters){parameters.body&&(parameters.body=parameters.body.replace(/\n/g,NEWLINE_CODE));var url="mailto:?"+mapToArray(parameters).map(getSerializedUrlParameter).join("&");return url}function init(){}function mapToArray(obj){var arr=[];return angular.forEach(obj,function(value,key){arr.push({key:key,value:value})}),arr}function getSerializedUrlParameter(parameter){return parameter.key+"="+parameter.value}var NEWLINE_CODE="%0D%0A";return init(),{compose:compose,composeUrl:composeUrl,getTemplate:getTemplate,getRenderedTemplate:getRenderedTemplate}}angular.module("app.services").factory("emailsService",emailsServiceFactory),emailsServiceFactory.$inject=["$window","$http","$templateCache","$interpolate","$location","apiService"]}(window,window.angular),function(window,angular,undefined){function externalUrlsServiceFactory(){function get(key){return"string"==typeof key?_urls[key]:angular.copy(_urls)}function init(){_urls={"bug-reporter":{router:"https://bugreport.apple.com"},cip:{router:"/account/ios/certificate/"},"cloudkit-dashboard":{router:"https://icloud.developer.apple.com/dashboard/"},documentation:{router:"/library/"},downloads:{router:"/download/",xcode:"/xcode/download/"},enrollment:{purchase:"/enroll/complete/",agreement:"/enroll/pla/"},forums:{router:"https://forums.developer.apple.com/"},"itunes-connect":{router:"https://itunesconnect.apple.com"},news:{router:"/news/"},payment:{router:"https://appleid.apple.com"},resources:{router:"/resources/"}}}var _urls;return init(),{get:get}}angular.module("app.services").factory("externalUrlsService",externalUrlsServiceFactory),externalUrlsServiceFactory.$inject=[]}(window,window.angular),function(window,angular,undefined){function pathsServiceFactory(){function get(key){return"string"==typeof key?_paths[key]:angular.copy(_paths)}function init(){_paths={templates:"/account/scripts/app/templates",services:"/services-account/QH65B2/account",maintenance:"/maintenance",logout:"/logout",register:"/register"}}var _paths;return init(),{get:get}}angular.module("app.services").factory("pathsService",pathsServiceFactory),pathsServiceFactory.$inject=[]}(window,window.angular),function(window,angular,undefined){function scrollServiceFactory($timeout,$window){function scrollToTop(duration){"undefined"==typeof duration&&(duration=defaults.duration),angular.element(ui.notificationBar).animate({scrollTop:0},duration)}function init(){defaults.offsetY=0,defaults.duration=215,ui.body=$window.document.body,ui.main=$window.document.querySelectorAll("main")[0],ui.mainContainer=$window.document.querySelectorAll(".panel.fluid")[0],ui.notificationBar=$window.document.querySelectorAll("notification-bar")[0]}var defaults={},ui={};return init(),{scrollToTop:scrollToTop}}angular.module("app.services").factory("scrollService",scrollServiceFactory),scrollServiceFactory.$inject=["$timeout","$window"]}(window,window.angular),function(window,angular,undefined){function storageServiceFactory($window){function get(storageKey){var mechanism,args=Array.prototype.slice.call(arguments,0);return"localStorage"===_storageMethod?(mechanism=$window.localStorage,mechanism.getItem.apply(mechanism,args)):void 0}function set(storageKey,value){var mechanism,args=Array.prototype.slice.call(arguments,0);if("localStorage"===_storageMethod){mechanism=$window.localStorage;var method=null!==value?"setItem":"removeItem";return mechanism[method].apply(mechanism,args)}}function init(){_storageMethod=getSupportedStorageMethod()}function getSupportedStorageMethod(){for(var method,methods=["localStorage"],index=methods.length;index-- >-1;)if(method=methods[index],method in $window)return method;return null}var _storageMethod;return init(),{get:get,set:set}}angular.module("app.services").factory("storageService",storageServiceFactory),storageServiceFactory.$inject=["$window"]}(window,window.angular),function(window,angular,undefined){function tokenCacheServiceFactory(){function get(key){return"string"==typeof key?_tokens[key]:angular.copy(_tokens)}function set(key,value){"string"==typeof key&&(_tokens[key]=value)}function init(){_tokens={csrf:null,csrf_ts:null}}var _tokens;return init(),{get:get,set:set}}angular.module("app.services").factory("tokenCacheService",tokenCacheServiceFactory),tokenCacheServiceFactory.$inject=[]}(window,window.angular),function(window,angular,undefined){function agreementsServiceFactory($rootScope,$http,apiService){function getPastAgreements(teamId){var requestData={teamId:teamId},promise=$http.post(apiService.getBasepath()+_resources.getPastAgreements,requestData).then(apiService.getResponseData.bind(null,"agreements"))["catch"](apiService.getDefaultErrorHandler());return promise}function getPendingAgreements(teamId,languageIsoCode){"undefined"==typeof languageIsoCode&&(languageIsoCode=DEFAULT_LANGUAGE_ISO_CODE);var requestData={teamId:teamId,languageIsoCode:languageIsoCode},promise=$http.post(apiService.getBasepath()+_resources.getPendingAgreements,requestData).then(apiService.getResponseData.bind(null,"agreements")).then(processPendingAgreements)["catch"](apiService.getDefaultErrorHandler());return promise}function getAgentTransferAgreement(teamId){var requestData={teamId:teamId},promise=$http.post(apiService.getBasepath()+_resources.getAgentTransferAgreement,requestData).then(apiService.getResponseData.bind(null,"agreement")).then(processAgentTransferAgreement)["catch"](apiService.getDefaultErrorHandler());return promise}function acceptAgreements(teamId,agreementIds){var requestData={teamId:teamId,agreementIds:agreementIds},promise=$http.post(apiService.getBasepath()+_resources.acceptAgreements,requestData)["catch"](apiService.getDefaultErrorHandler());return promise}function init(){_resources={getPastAgreements:"getAgreementHistory",getPendingAgreements:"listPendingAgreements",getAgentTransferAgreement:"getAgentTransferAgreement",acceptAgreements:"acceptAgreements"}}function processAgreement(agreement){var decodedAgreementText=decodeText(agreement.agreementText);return delete agreement.agreementText,agreement.agreementRootNode=angular.element(getCompiledNodeTree(decodedAgreementText)),agreement.checkboxText=decodeText(agreement.checkboxText),"localizedAgreements"in agreement&&agreement.localizedAgreements.unshift({language:agreement.language,languageIsoCode:agreement.languageIsoCode}),"role"in agreement&&(agreement.role=agreement.role.toUpperCase()),agreement}function processAgentTransferAgreement(agreement){return processAgreement(agreement),agreement.isAgentTransferAgreement=!0,agreement}function processPendingAgreements(agreements){return angular.forEach(agreements,processAgreement)}function decodeText(text){return decodeURIComponent(text).replace(/\+/g," ")}function getCompiledNodeTree(htmlString){function isSpace(htmlString){return!!(1===htmlString.length&&htmlString in unicodeSpaceCharacters||"nbsp;"===htmlString)}var unicodeSpaceCharacters={" ":null," ":null," ":null," ":null," ":null," ":null," ":null},parser=new DOMParser,rootNodes=parser.parseFromString(htmlString,"text/html").body.children;rootNodes=Array.prototype.slice.call(rootNodes,0).filter(isDisplayNode);var index,childNode,childNodes;angular.forEach(rootNodes,function(parentNode){for(childNodes=parentNode.childNodes,index=childNodes.length;--index>-1;)childNode=childNodes[index],(!childNode.textContent||isSpace(childNode.textContent))&&parentNode.removeChild(childNode)});var documentFragment=document.createDocumentFragment();for(rootNodes.reverse();rootNodes.length;)documentFragment.appendChild(rootNodes.pop());var rootNode=document.createElement("section");return rootNode.appendChild(documentFragment),rootNode}function isElementOrTextNode(node){return!(node.nodeType!==Node.ELEMENT_NODE&&node.nodeType!==Node.TEXT_NODE)}function isDisplayNode(node){var nonDisplayTagNames=["HEAD","LINK","META","SCRIPT","STYLE"];return!(!isElementOrTextNode(node)||-1!==nonDisplayTagNames.indexOf(node.tagName)||!node.textContent.length)}var _resources,DEFAULT_LANGUAGE_ISO_CODE="en";return init(),{getPastAgreements:getPastAgreements,getPendingAgreements:getPendingAgreements,getAgentTransferAgreement:getAgentTransferAgreement,acceptAgreements:acceptAgreements}}angular.module("app.services").factory("agreementsService",agreementsServiceFactory),agreementsServiceFactory.$inject=["$rootScope","$http","apiService"]}(window,window.angular),function(window,angular,undefined){function eventsServiceFactory($http,$document,apiService){function getEventRegistrations(){return"undefined"==typeof _promises.getEventRegistrations&&(_promises.getEventRegistrations=$http.post(apiService.getBasepath()+_resources.getEventRegistrations).then(apiService.getResponseData.bind(null,"events"))["catch"](apiService.getDefaultErrorHandler())),_promises.getEventRegistrations}function getEventPass(passDownloadUrl){var requestHeaders={"Content-Type":"application/x-www-form-urlencoded"},requestConfig=apiService.getRequestConfig(requestHeaders),requestData={};return $http.post(passDownloadUrl,requestData,requestConfig).then(function(res){var passData=angular.copy(res.data),passName=res.headers("content-disposition").match(EVENT_PASS_FILE_NAME_REGEX)[1]||"pass.pkpass";return res.data={pass:{data:passData,name:passName}},res}).then(apiService.getResponseData.bind(null,"pass"))["catch"](apiService.getDefaultErrorHandler())}function openEventPass(passDownloadUrl){return getEventPass(passDownloadUrl).then(function(pass){openFile(pass.data,pass.name,EVENT_PASS_FILE_MIME_TYPE)})}function init(){_promises={},_resources={getEventRegistrations:"getEventRegistrations",downloadPass:"downloadPass"}}function openFile(fileData,fileName,mimeType,charset,encoding){"string"!=typeof fileData&&"toString"in fileData&&(fileData=fileData.toString()),"undefined"==typeof mimeType&&(mimeType="application/octet-stream"),"undefined"==typeof charset&&(charset="utf-8"),"undefined"==typeof encoding&&(encoding="base64");var uri="data:"+mimeType+";charset="+charset+";"+encoding+","+fileData;window.location=uri}var _promises,_resources,EVENT_PASS_FILE_NAME_REGEX=/filename=(.*)$/,EVENT_PASS_FILE_MIME_TYPE="application/vnd.apple.pkpass";return init(),{getEventRegistrations:getEventRegistrations,getEventPass:getEventPass,openEventPass:openEventPass}}angular.module("app.services").factory("eventsService",eventsServiceFactory),eventsServiceFactory.$inject=["$http","$document","apiService"]}(window,window.angular),function(window,angular,undefined){function invitesServiceFactory($http,apiService){function getInvites(teamId){var requestData={teamId:teamId},promise=$http.post(apiService.getBasepath()+_resources.getInvites,requestData).then(apiService.getResponseData.bind(null,"invites"))["catch"](apiService.getDefaultErrorHandler());return promise.then(processInvites),promise}function sendInvites(teamId,invites){invites=angular.copy(invites);var requestData={teamId:teamId,invites:invites},promise=$http.post(apiService.getBasepath()+_resources.sendInvites,requestData).then(apiService.getResponseData.bind(null,"invites"));return promise.then(processInvites),promise}function revokeInvites(teamId,inviteIds){var requestData={teamId:teamId,inviteIds:inviteIds},promise=$http.post(apiService.getBasepath()+_resources.revokeInvites,requestData).then(apiService.getResponseData.bind(null,"invites"))["catch"](apiService.getDefaultErrorHandler());return promise.then(processInvites),promise}function init(){_resources={getInvites:"getInvites",sendInvites:"sendInvites",revokeInvites:"revokeInvites"}}function processInvites(invites){return angular.forEach(invites,function(invite){setDaysRemaining(invite),setRecipientRole(invite)})}function setDaysRemaining(invite){var today=+new Date;return invite.daysRemaining=Math.floor(invite.dateExpires/DAYS_TO_MILLISECONDS)-Math.floor(today/DAYS_TO_MILLISECONDS),invite}function setRecipientRole(invite){return invite.recipientRole=invite.recipientRole.toLowerCase(),invite}var _resources,DAYS_TO_MILLISECONDS=864e5;return init(),{getInvites:getInvites,sendInvites:sendInvites,revokeInvites:revokeInvites}}angular.module("app.services").factory("invitesService",invitesServiceFactory),invitesServiceFactory.$inject=["$http","apiService"]}(window,window.angular),function(window,angular,undefined){function notificationsServiceFactory($http,apiService){function getNotifications(teamId){var requestData={teamId:teamId},promise=$http.post(apiService.getBasepath()+_resources.getNotifications,requestData).then(apiService.getResponseData.bind(null,"notifications")).then(processNotifications)["catch"](apiService.getDefaultErrorHandler());return promise}function init(){_resources={getNotifications:"getNotifications"}}function processNotifications(notifications){return"paymentMethodMissing"in notifications||"paymentMethodExpired"in notifications||(notifications.paymentMethodValid=!0),notifications}var _resources;return init(),{getNotifications:getNotifications}}angular.module("app.services").factory("notificationsService",notificationsServiceFactory),notificationsServiceFactory.$inject=["$http","apiService"]}(window,window.angular),function(window,angular,undefined){function permissionsServiceFactory($http,apiService){function getPermissions(teamId,permissions,updateCache){if(permissions instanceof Array||(permissions=angular.copy(_defaults.permissions)),"boolean"!=typeof updateCache&&(updateCache=!1),"undefined"==typeof _promises.getPermissions||updateCache===!0){var requestHeaders={"Content-Type":"application/x-www-form-urlencoded"},requestData={teamId:teamId,permissions:permissions.join(",")},requestConfig=apiService.getRequestConfig(requestHeaders);_promises.getPermissions=$http.post("/services-account/"+_resources.getPermissions,requestData,requestConfig).then(apiService.getResponseData.bind(null,"permissions"))["catch"](apiService.getDefaultErrorHandler())}return _promises.getPermissions}function init(){_promises={},_resources={getPermissions:"checkPermissions"},_defaults={permissions:["team.agenttransfer.agreement.get","team.agenttransfer.cancel","team.agenttransfer.deny","team.agenttransfer.initiate","team.agreement.accept","team.autorenew.update","team.member.invite.get","team.member.invite.revoke","team.member.invite.send","team.member.leave","team.member.remove","team.member.role.change","team.server.remove","team.support.purchase"]}}var _promises,_resources,_defaults;return init(),{getPermissions:getPermissions}}angular.module("app.services").factory("permissionsService",permissionsServiceFactory),permissionsServiceFactory.$inject=["$http","apiService"]}(window,window.angular),function(window,angular,undefined){function preferencesServiceFactory($http,apiService){function getEmailSubscriptionStatus(){var promise=$http.post(apiService.getBasepath()+_resources.getEmailSubscriptionStatus).then(apiService.getResponseData)["catch"](apiService.getDefaultErrorHandler());return promise}function setEmailSubscriptionStatus(isSubscribed){var requestData={emailSubscribed:isSubscribed},promise=$http.post(apiService.getBasepath()+_resources.setEmailSubscriptionStatus,requestData).then(apiService.getResponseData)["catch"](apiService.getDefaultErrorHandler());return promise}function init(){_resources={getEmailSubscriptionStatus:"getCommPrefs",setEmailSubscriptionStatus:"setCommPrefs"}}var _resources;return init(),{getEmailSubscriptionStatus:getEmailSubscriptionStatus,setEmailSubscriptionStatus:setEmailSubscriptionStatus}}angular.module("app.services").factory("preferencesService",preferencesServiceFactory),preferencesServiceFactory.$inject=["$http","apiService"]}(window,window.angular),function(window,angular,undefined){function serversServiceFactory($http,apiService){function getServers(teamId){var requestData={teamId:teamId},promise=$http.post(apiService.getBasepath()+_resources.getServers,requestData).then(apiService.getResponseData.bind(null,"servers"))["catch"](apiService.getDefaultErrorHandler());return promise.then(processServers),promise}function removeServers(teamId,udids){var requestData={teamId:teamId,udids:udids},promise=$http.post(apiService.getBasepath()+_resources.removeServers,requestData).then(apiService.getResponseData.bind(null,"servers"))["catch"](apiService.getDefaultErrorHandler());return promise.then(processServers),promise}function init(){_resources={getServers:"getServers",removeServers:"removeServers"}}function processServers(servers){return angular.forEach(servers,setStatusLabel)}function setStatusLabel(server){server.statusLabel=STATUS_LABELS[server.status]||""}var _resources,STATUS_LABELS={enabled:"Enabled",pending:"Pending",expired:"Expired",pendingrevocation:"Pending Revocation",revoked:"Revoked"};return init(),{getServers:getServers,removeServers:removeServers}}angular.module("app.services").factory("serversService",serversServiceFactory),serversServiceFactory.$inject=["$http","apiService"]}(window,window.angular),function(window,angular,undefined){function sessionServiceFactory($http,apiService){function getUserProfile(){return"undefined"==typeof _promises.getUserProfile&&(_promises.getUserProfile=$http.post(apiService.getBasepath()+_resources.getUserProfile).then(apiService.getResponseData.bind(null,"userProfile")).then(processUserProfile)["catch"](apiService.getDefaultErrorHandler())),_promises.getUserProfile}function init(){_resources={getUserProfile:"getUserProfile"},_promises={}}function processUserProfile(userProfile){return userProfile.fullName=userProfile.firstName+" "+userProfile.lastName,userProfile.dsFullName=userProfile.dsFirstName+" "+userProfile.dsLastName,userProfile}var _resources,_promises;return init(),{getUserProfile:getUserProfile}}angular.module("app.services").factory("sessionService",sessionServiceFactory),sessionServiceFactory.$inject=["$http","apiService"]}(window,window.angular),function(window,angular,undefined){function supportRequestsServiceFactory($http,apiService){function getSupportRequests(teamId){var requestData={teamId:teamId},promise=$http.post(apiService.getBasepath()+_resources.getSupportRequests,requestData).then(apiService.getResponseData.bind(null,["availableTSIs","products","tsiHistory"]))["catch"](apiService.getDefaultErrorHandler());return promise.then(processSupportRequests),promise}function init(){_resources={getSupportRequests:"getSupportRequests"}}function processSupportRequests(data){var swap=angular.copy(data);angular.forEach(swap.products,processProduct);for(var key in data)data.hasOwnProperty(key)&&delete data[key];return data.products=swap.products,data.usedIncidents=swap.tsiHistory,data.unusedIncidents=swap.availableTSIs,data}function processProduct(product,productCode){product.productNameLabel=PRODUCT_NAME_LABELS[productCode],product.currency=apiService.decodeHtmlEntities(product.currency),processProductPurchaseUrlMap(product)}function processProductPurchaseUrlMap(product){var purchaseText,purchaseURLs=[];angular.forEach(product.purchaseURLs,function(url,languageIsoCode){purchaseText=PRODUCT_PURCHASE_TEXT[languageIsoCode]||PRODUCT_PURCHASE_TEXT["default"],purchaseURLs.push({languageIsoCode:languageIsoCode,purchaseUrl:url,purchaseText:purchaseText})}),product.purchaseURLs=purchaseURLs}var _resources,PRODUCT_NAME_LABELS={kt4:"2-Pack",kt5:"5-Pack"},PRODUCT_PURCHASE_TEXT={de:"Kaufen",fr:"Acheter",nl:"Bestel","default":"Buy"};return init(),{getSupportRequests:getSupportRequests}}angular.module("app.services").factory("supportRequestsService",supportRequestsServiceFactory),supportRequestsServiceFactory.$inject=["$http","apiService"]}(window,window.angular),function(window,angular,undefined){function teamsServiceFactory($http,apiService){function getTeams(updateCache){return"boolean"!=typeof updateCache&&(updateCache=!1),("undefined"==typeof _promises.getTeams||updateCache===!0)&&(_promises.getTeams=$http.post(apiService.getBasepath()+_resources.getTeams).then(apiService.getResponseData.bind(null,["teams","?enrollment"])).then(processTeams)["catch"](apiService.getDefaultErrorHandler())),_promises.getTeams}function getTeamMembers(teamId){var requestData={teamId:teamId};return $http.post(apiService.getBasepath()+_resources.getTeamMembers,requestData).then(apiService.getResponseData.bind(null,["agent","admins","members"])).then(processTeamMembers)["catch"](apiService.getDefaultErrorHandler())}function removeTeamMembers(teamId,teamMemberIds){var requestData={teamId:teamId,teamMemberIds:teamMemberIds};return $http.post(apiService.getBasepath()+_resources.removeTeamMembers,requestData).then(apiService.getResponseData.bind(null,["agent","admins","members"])).then(processTeamMembers)["catch"](apiService.getDefaultErrorHandler())}function setTeamMemberRoles(teamId,teamMemberIds,role){var requestData={teamId:teamId,teamMemberIds:teamMemberIds,role:role};return $http.post(apiService.getBasepath()+_resources.setTeamMemberRoles,requestData).then(apiService.getResponseData.bind(null,["agent","admins","members"])).then(processTeamMembers)["catch"](apiService.getDefaultErrorHandler())}function getRenewalPurchaseUrl(teamId,languageIsoCode){var requestData={teamId:teamId};return"undefined"!=typeof languageIsoCode&&(requestData.languageIsoCode=languageIsoCode),$http.post("/services-account/renewal/submitRenewal",requestData).then(apiService.getResponseData.bind(null,"renewal")).then(function(renewal){return renewal.purchaseUrl})["catch"](apiService.getDefaultErrorHandler())}function setAutoRenewalStatus(teamId,isEnabled){var requestData={teamId:teamId,autoRenewal:isEnabled};return $http.post(apiService.getBasepath()+_resources.setAutoRenewalStatus,requestData).then(apiService.getResponseData)["catch"](apiService.getDefaultErrorHandler())}function initiateAgentTransfer(teamId,agreementId,candidateId){var requestData={teamId:teamId,agreementId:agreementId,newAgentMemberId:candidateId};return $http.post(apiService.getBasepath()+_resources.initiateAgentTransfer,requestData).then(apiService.getResponseData)["catch"](apiService.getDefaultErrorHandler())}function resendAgentTransfer(teamId){var requestData={teamId:teamId};return $http.post(apiService.getBasepath()+_resources.resendAgentTransfer,requestData).then(apiService.getResponseData)["catch"](apiService.getDefaultErrorHandler())}function acceptAgentTransfer(teamId,agreementId){var requestData={teamId:teamId,agreementId:agreementId};return $http.post(apiService.getBasepath()+_resources.acceptAgentTransfer,requestData).then(function(){return getTeams(!0).then(function(teams){return teams.filter(function(team){return!(team.teamId!==teamId)})[0]})})["catch"](apiService.getDefaultErrorHandler())}function cancelAgentTransfer(teamId){var requestData={teamId:teamId};return $http.post(apiService.getBasepath()+_resources.cancelAgentTransfer,requestData).then(apiService.getResponseData)["catch"](apiService.getDefaultErrorHandler())}function acceptTeamInvite(inviteId){var requestData={inviteId:inviteId};return $http.post(apiService.getBasepath()+_resources.acceptTeamInvite,requestData).then(apiService.getResponseData.bind(null,"team")).then(processTeam)}function leaveTeam(teamId){var requestData={teamId:teamId};return _promises.getTeams=$http.post(apiService.getBasepath()+_resources.leaveTeam,requestData).then(apiService.getResponseData.bind(null,["teams","?enrollment"])).then(processTeams)["catch"](apiService.getDefaultErrorHandler()),_promises.getTeams}function init(){_promises={},_resources={getTeams:"getTeams",getTeamMembers:"getTeamMembers",setTeamMemberRoles:"setTeamMemberRoles",removeTeamMembers:"removeTeamMembers",setAutoRenewalStatus:"updateAutoRenewal",initiateAgentTransfer:"initiateAgentTransfer",resendAgentTransfer:"initiateAgentTransfer",acceptAgentTransfer:"acceptAgentTransfer",cancelAgentTransfer:"cancelAgentTransfer",acceptTeamInvite:"acceptInvite",leaveTeam:"leaveTeam"}}function processTeam(team){return setEntityTypeLabel(team),setUserRoleLabel(team),setUserRoleLevel(team),setIsEmpty(team),decodeAutoRenewPrice(team),team.program&&setDaysRemaining(team.program),team.agent&&setFullName(team.agent),team}function processTeams(data){var teams=data.teams;return data.enrollment&&data.enrollment.enrollmentStatus!==ENROLLMENT_STATUSES.DRAFT&&teams.push({teamId:data.enrollment.enrollmentId,name:data.enrollment.name,
entityType:data.enrollment.entityType,pendingEnrollment:data.enrollment}),angular.forEach(teams,processTeam),teams.sort(sortTeamsByUserRoleLevel),teams}function sortTeamsByUserRoleLevel(a,b){return a=a.userRoleLevel,b=b.userRoleLevel,a>b?1:b>a?-1:0}function processTeamMembers(people){return setFullName(people.agent),angular.forEach(people.admins,setFullName),angular.forEach(people.members,setFullName),people}function setDaysRemaining(program){return program.daysRemaining=Math.floor(Math.max(program.dateExpires-Date.now(),0)/DAYS_TO_MILLISECONDS),program}function setFullName(person){return person.fullName=person.firstName+" "+person.lastName,person}function setEntityTypeLabel(team){team.entityType&&(team.entityTypeLabel=ENTITY_TYPE_LABELS[team.entityType])}function setUserRoleLevel(team){team.userRoleLevel=USER_ROLES.indexOf(team.userRole)}function setUserRoleLabel(team){team.userRole&&(team.userRoleLabel=team.userRole.charAt(0).toUpperCase()+team.userRole.slice(1).toLowerCase())}function setIsEmpty(team){team.adminCount&&team.memberCount&&(team.isEmpty=!(team.adminCount+team.memberCount!==0))}function decodeAutoRenewPrice(team){team.program&&(team.program.autoRenewPrice=apiService.decodeHtmlEntities(team.program.autoRenewPrice))}var _promises,_resources,DAYS_TO_MILLISECONDS=864e5,ENROLLMENT_STATUSES={DRAFT:"d"},ENTITY_TYPE_LABELS={i:"Individual",c:"Company / Organization",h:"In-House / Enterprise",e:"Education / University",t:"iOS for IT"},USER_ROLES=["AGENT","ADMIN","MEMBER"];return init(),{getTeams:getTeams,getTeamMembers:getTeamMembers,setTeamMemberRoles:setTeamMemberRoles,removeTeamMembers:removeTeamMembers,getRenewalPurchaseUrl:getRenewalPurchaseUrl,setAutoRenewalStatus:setAutoRenewalStatus,initiateAgentTransfer:initiateAgentTransfer,resendAgentTransfer:resendAgentTransfer,acceptAgentTransfer:acceptAgentTransfer,cancelAgentTransfer:cancelAgentTransfer,acceptTeamInvite:acceptTeamInvite,leaveTeam:leaveTeam}}angular.module("app.services").factory("teamsService",teamsServiceFactory),teamsServiceFactory.$inject=["$http","apiService"]}(window,window.angular),function(window,angular,undefined){angular.module("app.filters",[])}(window,window.angular),function(window,angular,undefined){function capitalizeFilterFactory(){return function(input){return input=input?input.toString():"",input.charAt(0).toUpperCase()+input.substr(1)}}angular.module("app.filters").filter("capitalize",capitalizeFilterFactory),capitalizeFilterFactory.$inject=[]}(window,window.angular),function(window,angular,undefined){function daterangeFilterFactory($filter){var _filter=$filter("date"),_defaultFormat="MM/dd";return function(){if(!arguments[0])return"";var format="string"==typeof arguments[3]?arguments[3]:_defaultFormat,start_date=_filter(arguments[1],format),end_date=_filter(arguments[2],format);return start_date+"—"+end_date}}angular.module("app.filters").filter("daterange",daterangeFilterFactory),daterangeFilterFactory.$inject=["$filter"]}(window,window.angular),function(window,angular,undefined){function getFormattedAddress(address,format){if("undefined"==typeof address)return null;"undefined"==typeof format&&(format="1 c, t p");var key;return format.split("").map(function(literal){return key=addressComponentMap[literal],key&&key in address?address[key]:literal}).join("")}angular.module("app.filters").filter("formattedAddress",function(){return getFormattedAddress});var addressComponentMap={1:"streetAddress1",2:"streetAddress2",c:"city",t:"state",p:"postalCode",n:"country"}}(window,window.angular),function(window,angular,undefined){angular.module("app",["ngRoute","ngAnimate","app.services","app.interceptors","app.filters"]).constant("paths",{}).constant("externalUrls",{}).constant("user",{}).constant("roles",{MEMBER:"MEMBER",ADMIN:"ADMIN",AGENT:"AGENT"}).run(function($rootScope,$location,$timeout){function onDidRequestSelectTeam(event,team){!team&&$rootScope.teams.length>0&&(team=$rootScope.teams[0]);var prevSelectedTeam=$rootScope.selectedTeam;(prevSelectedTeam||team)&&(prevSelectedTeam&&team&&prevSelectedTeam.teamId===team.teamId||($rootScope.$emit("app.component.didRequestStateChange",{componentId:"ui.loader",componentState:"active"}),$timeout(function(){$rootScope.selectedTeam=team,$rootScope.$emit("session.teams.didSelectTeam",$rootScope.selectedTeam,prevSelectedTeam);var nextPath=getCurrentViewPathForTeam($rootScope.selectedTeam,prevSelectedTeam);$location.path()!==nextPath&&$location.path(nextPath),$timeout(function(){$rootScope.$emit("app.component.didRequestStateChange",{componentId:"ui.loader",componentState:"inactive"})},425)},425)))}function getCurrentViewPathForTeam(selectedTeam,prevSelectedTeam){var path;return selectedTeam?(path="/"+DEFAULT_TEAM_VIEW+"/"+selectedTeam.teamId,prevSelectedTeam||!$rootScope.isTeamRelatedView()&&!$rootScope.isInterstitialView()&&"events"!==$rootScope.currentView||(path="/"+$rootScope.currentView,$rootScope.isTeamRelatedView()&&(path+="/"+$rootScope.selectedTeam.teamId))):path="/welcome",path}var DEFAULT_TEAM_VIEW="overview";$rootScope.$on("session.teams.didRequestSelectTeam",onDidRequestSelectTeam)})}(window,window.angular),function(window,angular,undefined){function isRadResolverFactory($rootScope,$q,$route,teamsService){function resolveFn(){return init(),deferred.promise}function init(){resolveFn.rejectionReason="resolvers.isRadResolver.assertionWasFalse",$rootScope.$on("session.teams.didJoinTeam",resetPromise),$rootScope.$on("session.teams.didLeaveTeam",resetPromise),deferred||createPromise()}function createPromise(){deferred=$q.defer(),teamsService.getTeams(!0).then(onGetTeamsSuccess)["catch"](onGetTeamsError)}function resetPromise(){deferred=$q.defer(),teamsService.getTeams(!0).then(onGetTeamsSuccess)["catch"](onGetTeamsError)}function onGetTeamsSuccess(teams){teams&&0===teams.length?deferred.resolve(!0):deferred.reject(resolveFn.rejectionReason)}function onGetTeamsError(res){deferred.reject(resolveFn.rejectionReason)}return resolveFn}angular.module("app").factory("isRadResolver",isRadResolverFactory),isRadResolverFactory.$inject=["$rootScope","$q","$route","teamsService"];var deferred}(window,window.angular),function(window,angular,undefined){function hasTeamsResolverFactory($rootScope,$q,teamsService){function resolveFn(){return deferred.promise}function init(){resolveFn.rejectionReason="resolvers.hasTeamsResolver.assertionWasFalse",$rootScope.$on("session.teams.didJoinTeam",resetPromise),$rootScope.$on("session.teams.didLeaveTeam",resetPromise),deferred||createPromise()}function createPromise(){deferred=$q.defer(),teamsService.getTeams().then(onGetTeamsSuccess)["catch"](onGetTeamsError)}function resetPromise(){deferred=$q.defer(),teamsService.getTeams(!0).then(onGetTeamsSuccess)["catch"](onGetTeamsError)}function onGetTeamsSuccess(teams){teams&&teams.length>0?($rootScope.teams=teams,deferred.resolve(teams)):deferred.reject(resolveFn.rejectionReason)}function onGetTeamsError(res){deferred.reject(resolveFn.rejectionReason)}return init(),resolveFn}angular.module("app").factory("hasTeamsResolver",hasTeamsResolverFactory),hasTeamsResolverFactory.$inject=["$rootScope","$q","teamsService"];var deferred}(window,window.angular),function(window,angular,undefined){function hasSelectedTeamResolverFactory($rootScope,$q,$timeout,$location,storageService,hasTeamsResolver){function resolveFn(){return init(),deferred.promise}function init(){deferred=$q.defer(),hasTeamsResolver().then(onHasTeamsResolved)["catch"](function(rejectionReason){deferred.reject(rejectionReason)})}function onHasTeamsResolved(teams){if($rootScope.selectedTeam)deferred.resolve($rootScope.selectedTeam);else{var storedTeamId=getTeamIdPathValue()||storageService.get(TEAM_ID_STORAGE_KEY)||null,team=getTeamById(storedTeamId),unregisterListener=$rootScope.$on("session.teams.didSelectTeam",function(){unregisterListener(),deferred.resolve($rootScope.selectedTeam)});$rootScope.$emit("session.teams.didRequestSelectTeam",team)}}function getTeamById(teamId){return $rootScope.teams.reduce(function(prev,team){return team.teamId===teamId?team:prev},null)}function getTeamIdPathValue(){var path,matches,captures;return CAPTURE_TEAM_ID_REGEXP.lastIndex=0,path=$location.path(),"#"===path.charAt(path.length-1)&&(path+="/"),(matches=CAPTURE_TEAM_ID_REGEXP.exec(path))?(captures=matches.splice(1),captures.length?captures[0]:null):null}var deferred,CAPTURE_TEAM_ID_REGEXP=/^\/[-a-zA-Z]+\/([a-zA-Z0-9]+)/g,TEAM_ID_STORAGE_KEY="adp.session.teamId";return resolveFn.rejectionReason="resolvers.hasSelectedTeamResolver.assertionWasFalse",resolveFn}angular.module("app").factory("hasSelectedTeamResolver",hasSelectedTeamResolverFactory),hasSelectedTeamResolverFactory.$inject=["$rootScope","$q","$timeout","$location","storageService","hasTeamsResolver"]}(window,window.angular),function(window,angular,undefined){function hasPendingTeamResolverFactory($rootScope,$q,hasSelectedTeamResolver){function resolveFn(){return init(),deferred.promise}function init(){deferred=$q.defer(),hasSelectedTeamResolver().then(onHasSelectedTeamResolved)["catch"](function(rejectionReason){deferred.reject(rejectionReason)})}function onHasSelectedTeamResolved(team){function isPendingTeam(team){return!(!team||!team.pendingEnrollment)}isPendingTeam(team)?deferred.resolve(team):deferred.reject(resolveFn.rejectionReason)}var deferred;return resolveFn.rejectionReason="resolvers.hasPendingTeamResolver.assertionWasFalse",resolveFn}angular.module("app").factory("hasPendingTeamResolver",hasPendingTeamResolverFactory),hasPendingTeamResolverFactory.$inject=["$rootScope","$q","hasSelectedTeamResolver"]}(window,angular),function(window,angular,undefined){function hasEnrolledTeamResolverFactory($rootScope,$q,hasSelectedTeamResolver){function resolveFn(){return init(),deferred.promise}function init(){deferred=$q.defer(),hasSelectedTeamResolver().then(onHasSelectedTeamResolved)["catch"](function(rejectionReason){deferred.reject(rejectionReason)})}function onHasSelectedTeamResolved(team){function isEnrolledTeam(team){return!(!team||team.pendingEnrollment)}isEnrolledTeam(team)?deferred.resolve(team):deferred.reject(resolveFn.rejectionReason)}var deferred;return resolveFn.rejectionReason="resolvers.hasEnrolledTeamResolver.assertionWasFalse",resolveFn}angular.module("app").factory("hasEnrolledTeamResolver",hasEnrolledTeamResolverFactory),hasEnrolledTeamResolverFactory.$inject=["$rootScope","$q","hasSelectedTeamResolver"]}(window,angular),function(window,angular,undefined){function hasServersResolverFactory($q,hasEnrolledTeamResolver){function resolveFn(){return init(),deferred.promise}function init(){deferred=$q.defer(),hasEnrolledTeamResolver().then(onHasEnrolledTeamResolved)["catch"](function(rejectionReason){deferred.reject(rejectionReason)})}function onHasEnrolledTeamResolved(team){hasServers(team)?deferred.resolve(!0):deferred.reject(resolveFn.rejectionReason)}function hasServers(team){return!!(team&&team.serverCount>0)}var deferred;return resolveFn.rejectionReason="resolvers.hasServersResolver.assertionWasFalse",resolveFn}angular.module("app").factory("hasServersResolver",hasServersResolverFactory),hasServersResolverFactory.$inject=["$q","hasEnrolledTeamResolver"]}(window,window.angular),function(window,angular,undefined){function hasSupportResolverFactory($rootScope,$q,hasEnrolledTeamResolver,permissionsService){function resolveFn(){return init(),deferred.promise}function init(){deferred=$q.defer(),hasEnrolledTeamResolver().then(onHasEnrolledTeamResolved)["catch"](function(rejectionReason){deferred.reject(rejectionReason)})}function onHasEnrolledTeamResolved(team){permissionsService.getPermissions($rootScope.selectedTeam).then(onGetPermissionsSuccess)}function onGetPermissionsSuccess(){$rootScope.userHasPermission("team.support.purchase")?deferred.resolve(!0):deferred.reject(resolveFn.rejectionReason)}var deferred;return resolveFn.rejectionReason="resolvers.hasSupportResolver.assertionWasFalse",resolveFn}angular.module("app").factory("hasSupportResolver",hasSupportResolverFactory),hasSupportResolverFactory.$inject=["$rootScope","$q","hasEnrolledTeamResolver","permissionsService"]}(window,window.angular),function(window,angular,undefined){function hasEventRegistrationsResolverFactory($q,eventsService){function resolveFn(){return init(),deferred.promise}function init(){deferred=$q.defer(),eventsService.getEventRegistrations().then(function(registrations){registrations&&registrations.length>0?deferred.resolve(!0):deferred.reject(resolveFn.rejectionReason)})}var deferred;return resolveFn.rejectionReason="resolvers.hasEventRegistrationsResolver.assertionWasFalse",resolveFn}angular.module("app").factory("hasEventRegistrationsResolver",hasEventRegistrationsResolverFactory),hasEventRegistrationsResolverFactory.$inject=["$q","eventsService"]}(window,window.angular),function(window,angular,undefined){function shouldShowInterstitialResolverFactory($q,$location,$window,$timeout,storageService,externalUrls){function init(){deferred=$q.defer(),interstitialKey=interstitialKeyRegex.exec($location.path())[1],interstitialKeyRegex.lastIndex=0,skippedInterstitials=getSkippedInterstitials(),shouldShowInterstitial(interstitialKey)?deferred.resolve(!0):deferred.reject(rejectionReason+":"+interstitialKey)}function getSkippedInterstitials(){var skippedInterstitialsSerialized=storageService.get(preferenceStorageKey);return JSON.parse(skippedInterstitialsSerialized)||[]}function shouldShowInterstitial(interstitialKey){return!(-1!==skippedInterstitials.indexOf(interstitialKey))}var deferred,skippedInterstitials,interstitialKey,rejectionReason="resolvers.shouldShowInterstitialResolver.assertionWasFalse",preferenceStorageKey="adp.preferences.skippedInterstitials",interstitialKeyRegex=/^\/([a-zA-Z-]+)/g;return function(){return init(),deferred.promise}}angular.module("app").factory("shouldShowInterstitialResolver",shouldShowInterstitialResolverFactory),shouldShowInterstitialResolverFactory.$inject=["$q","$location","$window","$timeout","storageService","externalUrls"]}(window,window.angular),function(window,angular,undefined){function setRequestInterceptors($httpProvider){$httpProvider.defaults.headers.post["User-Locale"]="en_US",$httpProvider.defaults.headers.post.Accept="application/json",$httpProvider.defaults.headers.post["Content-Type"]="application/json",$httpProvider.defaults.headers.post["Cache-Control"]="max-age=0, no-cache, no-store, must-revalidate, proxy-revalidate",$httpProvider.interceptors.push("WriteTokensInterceptor")}angular.module("app").config(setRequestInterceptors),setRequestInterceptors.$inject=["$httpProvider"]}(window,window.angular),function(window,angular,undefined){function setResponseInterceptors($httpProvider){$httpProvider.interceptors.push("ReadTokensInterceptor"),$httpProvider.interceptors.push("CheckErrorsInterceptor")}angular.module("app").config(setResponseInterceptors),setResponseInterceptors.$inject=["$httpProvider"]}(window,window.angular),function(window,angular,undefined){function configureRoutes($locationProvider,$routeProvider,pathsServiceProvider,isRadResolverProvider,hasTeamsResolverProvider,hasSelectedTeamResolverProvider,hasPendingTeamResolverProvider,hasEnrolledTeamResolverProvider,hasServersResolverProvider,hasSupportResolverProvider,hasEventRegistrationsResolverProvider,shouldShowInterstitialResolverProvider){var DEFAULT_ROUTE="/welcome",pathsService=pathsServiceProvider.$get(),paths=pathsService.get(),isRadResolver=isRadResolverProvider.$get(),hasSelectedTeamResolver=(hasTeamsResolverProvider.$get(),hasSelectedTeamResolverProvider.$get()),hasPendingTeamResolver=hasPendingTeamResolverProvider.$get(),hasEnrolledTeamResolver=hasEnrolledTeamResolverProvider.$get(),hasServersResolver=hasServersResolverProvider.$get(),hasSupportResolver=hasSupportResolverProvider.$get(),hasEventRegistrationsResolver=hasEventRegistrationsResolverProvider.$get(),shouldShowInterstitialResolver=shouldShowInterstitialResolverProvider.$get();$routeProvider.when("/welcome",{templateUrl:paths.templates+"/views/tpl.welcome-view.html",resolve:{isRad:isRadResolver},reloadOnSearch:!1}),$routeProvider.when("/overview/:teamId?",{templateUrl:paths.templates+"/views/tpl.overview-view.html",resolve:{hasEnrolledTeam:hasEnrolledTeamResolver},reloadOnSearch:!1}),$routeProvider.when("/membership/:teamId?",{controller:"MembershipViewController",controllerAs:"view",templateUrl:paths.templates+"/views/tpl.membership-view.html",resolve:{hasEnrolledTeam:hasEnrolledTeamResolver}}),$routeProvider.when("/people/:teamId?",{controller:"PeopleViewController",controllerAs:"view",templateUrl:paths.templates+"/views/tpl.people-view.html",resolve:{hasEnrolledTeam:hasEnrolledTeamResolver}}),$routeProvider.when("/servers/:teamId?",{controller:"ServersViewController",controllerAs:"view",templateUrl:paths.templates+"/views/tpl.servers-view.html",resolve:{hasServers:hasServersResolver}}),$routeProvider.when("/support/:teamId?",{controller:"SupportViewController",controllerAs:"view",templateUrl:paths.templates+"/views/tpl.support-view.html",resolve:{hasSupport:hasSupportResolver}}),$routeProvider.when("/itunes-connect/:teamId?",{controller:"InterstitialViewController",controllerAs:"view",templateUrl:paths.templates+"/views/interstitials/tpl.itunes-connect-view.html",resolve:{hasSelectedTeam:hasSelectedTeamResolver,shouldShowInterstitial:shouldShowInterstitialResolver}}),$routeProvider.when("/cloudkit-dashboard/:teamId?",{controller:"InterstitialViewController",controllerAs:"view",templateUrl:paths.templates+"/views/interstitials/tpl.cloudkit-dashboard-view.html",resolve:{hasSelectedTeam:hasSelectedTeamResolver,shouldShowInterstitial:shouldShowInterstitialResolver}}),$routeProvider.when("/events",{controller:"EventsViewController",controllerAs:"view",templateUrl:paths.templates+"/views/tpl.events-view.html",resolve:{hasEventRegistrations:hasEventRegistrationsResolver}}),$routeProvider.when("/forums",{controller:"InterstitialViewController",controllerAs:"view",templateUrl:paths.templates+"/views/interstitials/tpl.forums-view.html",resolve:{shouldShowInterstitial:shouldShowInterstitialResolver}}),$routeProvider.when("/bug-reporter",{controller:"InterstitialViewController",controllerAs:"view",templateUrl:paths.templates+"/views/interstitials/tpl.bug-reporter-view.html",resolve:{shouldShowInterstitial:shouldShowInterstitialResolver}}),$routeProvider.when("/enrollment/:teamId?",{templateUrl:paths.templates+"/views/tpl.enrollment-view.html",resolve:{hasPendingTeam:hasPendingTeamResolver}}),$routeProvider.when("/error",{templateUrl:paths.templates+"/views/tpl.error-view.html",resolve:{isRad:isRadResolver}}),$routeProvider.otherwise({redirectTo:DEFAULT_ROUTE})}angular.module("app").config(configureRoutes),configureRoutes.$inject=["$locationProvider","$routeProvider","pathsServiceProvider","isRadResolverProvider","hasTeamsResolverProvider","hasSelectedTeamResolverProvider","hasPendingTeamResolverProvider","hasEnrolledTeamResolverProvider","hasServersResolverProvider","hasSupportResolverProvider","hasEventRegistrationsResolverProvider","shouldShowInterstitialResolverProvider"]}(window,window.angular),function(window,angular,undefined){function configureLogs($provide){function decorateRootScopeEmit($delegate){var _emit=$delegate.$emit;return $delegate.$emit=function(){var eventType=arguments[0],data=arguments[1];isCustomEventType(eventType)&&logCustomEvent(eventType,data),_emit.apply(this,arguments)},$delegate}function isCustomEventType(eventType){return!(!eventType||eventType[0]===ANGULAR_EVENT_PREFIX)}function logCustomEvent(eventType,data){_log(eventType),_dir(data)}var ANGULAR_EVENT_PREFIX="$",_log=window.console.log.bind(window.console),_dir=window.console.dir.bind(window.console);$provide.decorator("$rootScope",decorateRootScopeEmit)}angular.module("app").config(configureLogs),configureLogs.$inject=["$provide"]}(window,window.angular),function(window,angular,undefined){function fetchEventRegistrations(eventsService,user){function onGetEventsRegistrationsSuccess(eventRegistrations){user.eventRegistrations=eventRegistrations}user.events=[],eventsService.getEventRegistrations().then(onGetEventsRegistrationsSuccess)}angular.module("app").run(fetchEventRegistrations)}(window,window.angular),function(window,angular,undefined){function fetchExternalUrls($rootScope,externalUrlsService,externalUrls){function init(){angular.extend(externalUrls,externalUrlsService.get()),$rootScope.externalUrls=externalUrls}init()}angular.module("app").run(fetchExternalUrls)}(window,window.angular),function(window,angular,undefined){function fetchNotifications($rootScope,$timeout,$q,permissionsService,notificationsService,paths){function onDidSelectTeam(){$rootScope.programIsEnrolled()&&fetchNotifications()}function onDidSetAutoRenewal(event,autoRenewalEnabled){autoRenewalEnabled&&fetchNotifications(["paymentMethodValid","paymentMethodMissing","paymentMethodExpired"])}function onDidAcceptAgentTransfer(){fetchNotifications()}function fetchNotifications(identifiers){function emitNotification(data,type){if(!(identifiers instanceof Array&&-1===identifiers.indexOf(type))&&null!==data){var eventType="session.notifications."+type,eventData=data;$rootScope.$emit(eventType,eventData)}}if($rootScope.selectedTeam){"string"==typeof identifiers&&(identifiers=[identifiers]);var teamId=$rootScope.selectedTeam.teamId;notificationsService.getNotifications(teamId).then(function(notifications){"undefined"==typeof identifiers&&$rootScope.$emit("app.notifications.didRequestFlushNotifications"),angular.forEach(notifications,emitNotification)})}}var MILLISECONDS_PER_DAY=864e5,CRITICAL_PENDING_PERIOD_LENGTH=5;$rootScope.$on("session.teams.didSelectTeam",onDidSelectTeam),$rootScope.$on("session.teams.didSetAutoRenewal",onDidSetAutoRenewal),$rootScope.$on("session.teams.didAcceptAgentTransfer",onDidAcceptAgentTransfer),$rootScope.$on("session.notifications.membershipExpired",function(event,data){var resolve={membershipStatus:"expired",requiredAgreementIds:data.requiredAgreementIds||[],agent:$rootScope.selectedTeam.agent,onlineStoreOptions:data.onlineStoreOptions},notification={id:"notifications.membershipStatusNotification_expired",priority:0,controller:"MembershipStatusNotificationController",templateUrl:paths.templates+"/components/notifications/tpl.membership-status-notification.html",resolve:resolve};$rootScope.$emit("app.notifications.didRequestDisplayNotification",notification)}),$rootScope.$on("session.notifications.membershipExpirationPending",function(event,data){var dateExpires,daysRemaining,priority,resolve,notification;($rootScope.selectedTeam.program.autoRenew!==!0||$rootScope.userIsAgent())&&(dateExpires=data.dateExpires[0],daysRemaining=Math.max(0,Math.round((dateExpires-Date.now())/MILLISECONDS_PER_DAY)),priority=CRITICAL_PENDING_PERIOD_LENGTH>=daysRemaining?0:1,resolve={priority:priority,membershipStatus:"pending",requiredAgreementIds:data.requiredAgreementIds||[],daysRemaining:daysRemaining,agent:$rootScope.selectedTeam.agent,onlineStoreOptions:data.onlineStoreOptions},notification={id:"notifications.membershipStatusNotification_pending",controller:"MembershipStatusNotificationController",templateUrl:paths.templates+"/components/notifications/tpl.membership-status-notification.html",resolve:resolve},$rootScope.$emit("app.notifications.didRequestDisplayNotification",notification))}),$rootScope.$on("session.notifications.paymentMethodMissing",function(event,data){if($rootScope.userIsAgent()){var notification={id:"notifications.paymentStatusNotification_missing",priority:0,controller:"PaymentStatusNotificationController",templateUrl:paths.templates+"/components/notifications/tpl.payment-status-notification.html",resolve:{paymentMethodStatus:"missing"}};$rootScope.$emit("app.notifications.didRequestDisplayNotification",notification)}}),$rootScope.$on("session.notifications.paymentMethodExpired",function(event,data){if($rootScope.userIsAgent()){var notification={id:"notifications.paymentStatusNotification_expired",priority:0,controller:"PaymentStatusNotificationController",templateUrl:paths.templates+"/components/notifications/tpl.payment-status-notification.html",resolve:{paymentMethodStatus:"expired"}};$rootScope.$emit("app.notifications.didRequestDisplayNotification",notification)}}),$rootScope.$on("session.notifications.agentTransferPending",function(event,data){if($rootScope.userIsAgent()||$rootScope.selectedTeam.teamMemberId===data.newAgent.teamMemberId){data.newAgent.fullName=data.newAgent.firstName+" "+data.newAgent.lastName;var resolve={agent:function(){return $rootScope.selectedTeam.agent},candidate:function(){return data.newAgent}},notification={id:"notifications.pendingAgentTransferNotification",controller:"TransferStatusNotificationController",templateUrl:paths.templates+"/components/notifications/tpl.transfer-status-notification.html",resolve:resolve};$rootScope.$emit("app.notifications.didRequestDisplayNotification",notification)}})}angular.module("app").run(fetchNotifications)}(window,window.angular),function(window,angular,undefined){function fetchPaths(pathsService,paths){function init(){angular.extend(paths,pathsService.get())}init()}angular.module("app").run(fetchPaths)}(window,window.angular),function(window,angular,undefined){function setListeners($rootScope,$timeout,permissionsService,user){function init(){$rootScope.$on("session.teams.didSelectTeam",reload),$rootScope.$on("session.teams.didAcceptAgentTransfer",reload),$rootScope.$on("session.teams.didRemoveTeamMembers",onDidRemoveTeamMembers)}function reload(){$rootScope.programIsEnrolled()&&fetchPermissions()}function fetchPermissions(){function onGetPermissionsSuccess(permissions){permissions=permissions.filter(function(permission){return!!permission.accessAllowed}).map(function(permission){return permission.permission}),user.permissions=permissions,$timeout()}permissionsService.getPermissions($rootScope.selectedTeam.teamId,null,!0).then(onGetPermissionsSuccess)}function onDidRemoveTeamMembers(event,data){$timeout(function(){if($rootScope.userHasPermission("team.agenttransfer.initiate")){var index,admins=data.remainingTeamMembers.admins,members=data.remainingTeamMembers.members;admins.length+members.length===0&&(index=user.permissions.indexOf("team.agenttransfer.initiate"),user.permissions.splice(index,1))}})}init()}angular.module("app").run(setListeners)}(window,window.angular),function(window,angular,undefined){function fetchTeams($rootScope,teamsService,hasSelectedTeamResolver){function init(){$rootScope.teams=[],$rootScope.selectedTeam=null,fetchTeams()}function fetchTeams(){function onGetTeamsSuccess(teams){teams.length>0&&($rootScope.teams=teams),("events"===$rootScope.currentView||"forums"===$rootScope.currentView||"bug-reporter"===$rootScope.currentView)&&hasSelectedTeamResolver()}teamsService.getTeams().then(onGetTeamsSuccess)}init()}angular.module("app").run(fetchTeams)}(window,window.angular),function(window,angular,undefined){function fetchUserProfile($rootScope,sessionService,user){function onGetSessionInfoSuccess(sessionInfo){angular.extend(user,sessionInfo)}function onDidSelectTeam(){user.paymentMethodStatus=null}function onDidSetAutoRenewal(){user.paymentMethodStatus=null}function onPaymentMethodValid(){user.paymentMethodStatus="valid"}function onPaymentMethodMissing(){user.paymentMethodStatus="missing"}function onPaymentMethodExpired(){user.paymentMethodStatus="expired"}$rootScope.$on("session.teams.didSelectTeam",onDidSelectTeam),$rootScope.$on("session.teams.didSetAutoRenewal",onDidSetAutoRenewal),$rootScope.$on("session.notifications.paymentMethodValid",onPaymentMethodValid),$rootScope.$on("session.notifications.paymentMethodMissing",onPaymentMethodMissing),$rootScope.$on("session.notifications.paymentMethodExpired",onPaymentMethodExpired),sessionService.getUserProfile().then(onGetSessionInfoSuccess)}angular.module("app").run(fetchUserProfile)}(window,window.angular),function(window,angular,undefined){function processUrlParameters($rootScope,$window,$location,$timeout,sessionService){function init(){var params=$window.getUrlParameters();if("view"in params){var view=params.view;switch(view){case"settings":$timeout(function(){$rootScope.$emit("app.component.didRequestStateChange",{componentId:"ui.modals.settingsModal",componentState:"active"})},1e3);break;default:$location.path("/"+params.view)}}"inviteId"in params&&sessionService.getUserProfile().then(function(){$timeout(function(){var data={inviteId:$window.decodeURIComponent(params.inviteId)};$rootScope.$emit("session.teams.didRequestJoinTeam",data)},1e3)})}init()}angular.module("app").run(processUrlParameters)}(window,window.angular),function(window,angular,undefined){function setListeners($rootScope,storageService){function onDidSelectTeam(){$rootScope.programIsEnrolled()&&storageService.set(TEAM_ID_STORAGE_KEY,$rootScope.selectedTeam.teamId)}var TEAM_ID_STORAGE_KEY="adp.session.teamId";$rootScope.$on("session.teams.didSelectTeam",onDidSelectTeam)}angular.module("app").run(setListeners)}(window,window.angular),function(window,angular,undefined){function trackCurrentView($rootScope,$location,$timeout){function setCurrentView(){captureViewRegExp.lastIndex=0;var path=$location.path();"#"===path.charAt(path.length-1)&&(path+="/");var captures=captureViewRegExp.exec(path).splice(1);$rootScope.currentView=captures.length?captures[0]:"",$rootScope.currentViewDisplay=$rootScope.currentView.replace("-"," ")}var captureViewRegExp=/^\/([-a-zA-Z]+)/g;$rootScope.$on("$routeChangeSuccess",setCurrentView),$timeout(setCurrentView)}angular.module("app").run(trackCurrentView)}(window,window.angular),function(window,angular,undefined){function setListeners($rootScope,scrollService){function onRouteChangeSuccess(event,currentRoute,previousRoute){scrollService.scrollToTop(220)}$rootScope.$on("$routeChangeSuccess",onRouteChangeSuccess)}angular.module("app").run(setListeners)}(window,window.angular),function(window,angular,undefined){function setListeners($rootScope,$window,$timeout,$location,externalUrls,hasSelectedTeamResolver){function onRouteChangeError(event,currentRoute,previousRoute,rejectionReason){function redirectToDefaultTeamView(){$location.path("/"+DEFAULT_TEAM_VIEW+"/"+$rootScope.selectedTeam.teamId)}switch(rejectionReason){case"resolvers.isRadResolver.assertionWasFalse":hasSelectedTeamResolver().then(redirectToDefaultTeamView);break;case"resolvers.hasTeamsResolver.assertionWasFalse":$location.path("/welcome");break;case"resolvers.hasPendingTeamResolver.assertionWasFalse":hasSelectedTeamResolver().then(redirectToDefaultTeamView);break;case"resolvers.hasEnrolledTeamResolver.assertionWasFalse":$location.path("/enrollment/"+$rootScope.selectedTeam.teamId);break;case"resolvers.hasServersResolver.assertionWasFalse":hasSelectedTeamResolver().then(redirectToDefaultTeamView);break;case"resolvers.shouldShowInterstitialResolver.assertionWasFalse:bug-reporter":case"resolvers.shouldShowInterstitialResolver.assertionWasFalse:cloudkit-dashboard":case"resolvers.shouldShowInterstitialResolver.assertionWasFalse:forums":case"resolvers.shouldShowInterstitialResolver.assertionWasFalse:itunes-connect":var interstitialKey=rejectionReason.split(":")[1],externalUrl=externalUrls[interstitialKey].router;$window.location.replace(externalUrl);break;default:previousRoute?$window.history.back():$location.path("/welcome")}}var DEFAULT_TEAM_VIEW="overview";$rootScope.$on("$routeChangeError",onRouteChangeError)}angular.module("app").run(setListeners)}(window,window.angular),function(window,angular,undefined){function setListeners($rootScope){function onDidJoinTeam(event,newTeam){$rootScope.$emit("session.teams.didRequestSelectTeam",newTeam)}$rootScope.$on("session.teams.didJoinTeam",onDidJoinTeam)}angular.module("app").run(setListeners)}(window,window.angular),function(window,angular,undefined){function setListeners($rootScope,$location,$timeout){function onDidLeaveTeam(event,remainingTeams){0===remainingTeams.length}$rootScope.$on("session.teams.didLeaveTeam",onDidLeaveTeam);
}angular.module("app").run(setListeners)}(window,window.angular),function(window,angular,undefined){function setListeners($rootScope,scrollService){function onDidDisplayNotification(event,newTeam){scrollService.scrollToTop(220)}$rootScope.$on("app.notifications.didDisplayNotification",onDidDisplayNotification)}angular.module("app").run(setListeners)}(window,window.angular),function(window,angular,undefined){function UITableController($rootScope,$scope,$filter,$timeout){function isLoaded(){return!!($scope.items instanceof Array)}function isEmpty(){return!(0!==_filteredItemsCount)}function isFiltered(){return!!$scope.itemFilterQuery}function isCollapsed(){return!isExpanded()}function isExpanded(){return!!($scope.itemPreviewLimit>=_filteredItemsCount)}function collapse(){setItemPreviewLimit(0)}function expand(){setItemPreviewLimit(1/0)}function getItem(index){var item=null;return isValidItemIndex(index)&&(item=$scope.filteredItems[index]),item}function getItemIndex(item){var index=-1;return isLoaded()&&(index=$scope.filteredItems.indexOf(item)),index}function toggleSelection(items,condition){if(!$scope.isStatic){items||(items=[]),items instanceof Array||(items=[items]),"function"==typeof $scope.itemIsStatic&&(items=items.filter(function(item){return!$scope.itemIsStatic(item)}));var toggleState="boolean"!=typeof condition;angular.forEach(items,function(item){item.selected=toggleState?!item.selected:condition}),updateHasSelectedStates()}}function hasSelectedNone(){return _hasSelectedNone}function hasSelectedAll(){return _hasSelectedAll}function getSelectedItems(){return"undefined"==typeof $scope.items?[]:$scope.items.filter(function(item){return item.selected})}function setItemPreviewLimit(count){"number"!=typeof count&&(count=1/0),$timeout(function(){$scope.itemPreviewLimit=count})}function getFilteredItemsSummary(){if(!isLoaded())return"loading";var summary="";return isFiltered()&&(summary+=_filteredItemsCount+" of "),summary+=_itemsCount}function init(){_itemsCount=0,_filteredItemsCount=0,_hasSelectedNone=!0,_hasSelectedAll=!1,$scope.$watchCollection("items",function(){!$scope.items||$scope.items instanceof Array||($scope.items=[$scope.items]),_itemsCount=isLoaded()?$scope.items.length:0,filter()}),$scope.$watch("itemFilterQuery",filter),$scope.$watch("itemSortBy",onChangeItemSortBy)}function onChangeItemSortBy(itemSortBy,itemSortByPrev){itemSortByPrev&&itemSortBy===itemSortByPrev.substr(1)||($scope.itemSortDescending=!1,$scope.itemSortBy&&$scope.itemSortBy.match(/^-/g)&&($scope.itemSortBy=$scope.itemSortBy.substr(1),$scope.itemSortDescending=!0))}function isValidItemIndex(index){return!!(index>=-1&&_filteredItemsCount>index)}function updateHasSelectedStates(){_hasSelectedNone=!0,_hasSelectedAll=!!(_filteredItemsCount>0);for(var item,index=_filteredItemsCount;--index>-1;)item=getItem(index),_hasSelectedNone&&(_hasSelectedNone=_hasSelectedNone&&!item.selected),_hasSelectedAll&&(_hasSelectedAll=_hasSelectedAll&&item.selected)}function filter(){isCollapsed()&&$scope.itemFilterQuery&&$scope.setItemPreviewLimit(1/0),$scope.filteredItems=function(){var items=[];return isLoaded()&&(items="undefined"==typeof $scope.itemFilter?$filter("filter")($scope.items,$scope.itemFilterQuery):$filter("filter")($scope.items,$scope.itemFilter),$scope.itemSortBy&&(items=$filter("orderBy")(items,$scope.itemSortBy,$scope.itemSortDescending))),items}(),angular.forEach($scope.items,function(item){item._uiTableRowVisible=!!($scope.filteredItems.indexOf(item)>-1)}),_filteredItemsCount=$scope.filteredItems.length,updateHasSelectedStates()}var _itemsCount,_filteredItemsCount,_hasSelectedNone,_hasSelectedAll;init(),angular.extend($scope,{isLoaded:isLoaded,isEmpty:isEmpty,isFiltered:isFiltered,isCollapsed:isCollapsed,isExpanded:isExpanded,collapse:collapse,expand:expand,getItem:getItem,getItemIndex:getItemIndex,hasSelectedNone:hasSelectedNone,hasSelectedAll:hasSelectedAll,getSelectedItems:getSelectedItems,toggleSelection:toggleSelection,setItemPreviewLimit:setItemPreviewLimit,getFilteredItemsSummary:getFilteredItemsSummary})}angular.module("app").controller("UITableController",UITableController),UITableController.$inject=["$rootScope","$scope","$filter","$timeout"]}(window,window.angular),function(window,angular,undefined){function UserMenuController($rootScope,$scope,$timeout,user,paths){function userHasMultipleTeams(){return!!($rootScope.userHasTeams()&&$rootScope.teams.length>1)}function init(){$scope.user=user,$scope.paths=paths,$rootScope.$on("app.component.didChangeState",function(event,data){"ui.menus.sidebar"===data.componentId&&"active"===data.componentState&&$scope.setComponentState("inactive")})}init(),angular.extend($scope,{userHasMultipleTeams:userHasMultipleTeams})}angular.module("app").controller("UserMenuController",UserMenuController),UserMenuController.$inject=["$rootScope","$scope","$timeout","user","paths"]}(window,window.angular),function(window,angular,undefined){function SettingsMenuController($rootScope,$scope,preferencesService,user){function onToggleEmailSubscription(){$scope.settings.emailSubscribed=!$scope.settings.emailSubscribed,preferencesService.setEmailSubscriptionStatus($scope.settings.emailSubscribed).then(onGetEmailSubscriptionStatusSuccess).then(function(){$scope.hasSavedPreferences=!0})}function init(){$scope.user=user,$scope.settings={},$rootScope.$on("app.component.didChangeState",function(event,data){data.componentId===$scope.getComponentId()&&"active"===data.componentState&&reset()}),preferencesService.getEmailSubscriptionStatus().then(onGetEmailSubscriptionStatusSuccess)}function reset(){$scope.hasSavedPreferences=!1}function onGetEmailSubscriptionStatusSuccess(subscriptionStatus){$scope.settings.emailSubscribed=subscriptionStatus.emailSubscribed}init(),angular.extend($scope,{onToggleEmailSubscription:onToggleEmailSubscription})}angular.module("app").controller("SettingsMenuController",SettingsMenuController),SettingsMenuController.$inject=["$rootScope","$scope","preferencesService","user"]}(window,window.angular),function(window,angular,undefined){function TeamSelectMenuController($rootScope,$scope,$timeout){function getSelectedTeam(){return $rootScope.selectedTeam}function setSelectedTeam(team){$timeout(function(){$rootScope.$emit("session.teams.didRequestSelectTeam",team),$rootScope.$emit("app.component.didRequestStateChange",{componentId:"ui.modals.userMenuModal",componentState:"inactive"})})}function init(){}init(),angular.extend($scope,{getSelectedTeam:getSelectedTeam,setSelectedTeam:setSelectedTeam})}angular.module("app").controller("TeamSelectMenuController",TeamSelectMenuController),TeamSelectMenuController.$inject=["$rootScope","$scope","$timeout"]}(window,window.angular),function(window,angular,undefined){function ResendAgentTransferModalController($rootScope,$scope,$timeout,teamsService,user){function onClickResendRequest(){$rootScope.$emit("session.teams.didRequestResendAgentTransfer")}function init(){$rootScope.$on("session.notifications.agentTransferPending",onAgentTransferPending),$rootScope.$on("session.teams.didInitiateAgentTransfer",onDidInitiateAgentTransfer),$rootScope.$on("session.teams.didRequestResendAgentTransfer",onDidRequestResendAgentTransfer)}function onAgentTransferPending(event,data){($rootScope.userIsAgent()||$rootScope.selectedTeam.teamMemberId===data.newAgent.teamMemberId)&&($scope.candidate=data.newAgent,$scope.candidate.fullName=$scope.candidate.firstName+" "+$scope.candidate.lastName)}function onDidInitiateAgentTransfer(event,candidate){($rootScope.userIsAgent()||$rootScope.selectedTeam.teamMemberId===data.newAgent.teamMemberId)&&($scope.candidate=candidate,$scope.candidate.fullName=$scope.candidate.firstName+" "+$scope.candidate.lastName)}function onDidRequestResendAgentTransfer(){function onResendAgentTransferSuccess(){$rootScope.$emit("session.teams.didResendAgentTransfer"),$scope.setComponentState("inactive")}teamsService.resendAgentTransfer($rootScope.selectedTeam.teamId).then(onResendAgentTransferSuccess)}init(),angular.extend($scope,{onClickResendRequest:onClickResendRequest})}angular.module("app").controller("ResendAgentTransferModalController",ResendAgentTransferModalController),ResendAgentTransferModalController.$inject=["$rootScope","$scope","$timeout","teamsService","user"]}(window,window.angular),function(window,angular,undefined){function CancelAgentTransferModalController($rootScope,$scope,$timeout,teamsService,user){function onClickCancelRequest(){$rootScope.$emit("session.teams.didRequestCancelAgentTransfer")}function init(){$scope.$on("$destroy",$rootScope.$on("session.teams.didRequestCancelAgentTransfer",function(){function onCancelAgentTransferSuccess(){$rootScope.$emit("session.teams.didCancelAgentTransfer"),$scope.setComponentState("inactive")}teamsService.cancelAgentTransfer($rootScope.selectedTeam.teamId).then(onCancelAgentTransferSuccess)}))}init(),angular.extend($scope,{onClickCancelRequest:onClickCancelRequest})}angular.module("app").controller("CancelAgentTransferModalController",CancelAgentTransferModalController),CancelAgentTransferModalController.$inject=["$rootScope","$scope","$timeout","teamsService","user"]}(window,window.angular),function(window,angular,undefined){function DenyAgentTransferModalController($rootScope,$scope,$timeout,teamsService,user){function onClickDenyRequest(){$rootScope.$emit("session.teams.didRequestDenyAgentTransfer")}function init(){$scope.$on("$destroy",$rootScope.$on("session.teams.didRequestDenyAgentTransfer",function(){function onDenyAgentTransferSuccess(){$rootScope.$emit("session.teams.didDenyAgentTransfer"),$scope.setComponentState("inactive")}teamsService.cancelAgentTransfer($rootScope.selectedTeam.teamId).then(onDenyAgentTransferSuccess)}))}init(),angular.extend($scope,{onClickDenyRequest:onClickDenyRequest})}angular.module("app").controller("DenyAgentTransferModalController",DenyAgentTransferModalController),DenyAgentTransferModalController.$inject=["$rootScope","$scope","$timeout","teamsService","user"]}(window,window.angular),function(window,angular,undefined){function JoinTeamModalController($rootScope,$scope,$timeout,teamsService,user){function onClickAcceptInvite(){function onAcceptTeamInviteSuccess(newTeam){$rootScope.teams.push(newTeam),$rootScope.$emit("session.teams.didJoinTeam",newTeam)}function onAcceptTeamInviteError(errorKey,res){$scope.errorMessage=errorMessagesMap[errorKey]||"There was a problem processing the invitation.",$scope.setComponentState("error")}$scope.inviteId&&teamsService.getTeams().then(teamsService.acceptTeamInvite.bind(null,$scope.inviteId)).then(onAcceptTeamInviteSuccess)["catch"](onAcceptTeamInviteError)}function init(){$scope.addStateTransition("active","error",!0),$scope.user=user,$scope.inviteId=null,$rootScope.$on("session.teams.didRequestJoinTeam",onDidRequestJoinTeam),$rootScope.$on("session.teams.didJoinTeam",onDidJoinTeam)}function onDidRequestJoinTeam(event,data){$scope.inviteId=data.inviteId,$scope.setComponentState("active")}function onDidJoinTeam(event,team){$scope.setComponentState("inactive")}var errorMessagesMap={"teams.invite.alreadyjoined":"You are already a member of this team.","teams.invite.alreadyaccepted":"The invitation has already been accepted.","teams.invite.expired":"The invitation has expired.","teams.invite.invalid":"The invitation is invalid.","teams.invite.notfound":"The invitation was not found.","teams.invite.withdrawn":"The invitation was withdrawn."};init(),angular.extend($scope,{onClickAcceptInvite:onClickAcceptInvite})}angular.module("app").controller("JoinTeamModalController",JoinTeamModalController),JoinTeamModalController.$inject=["$rootScope","$scope","$timeout","teamsService","user"]}(window,window.angular),function(window,angular,undefined){function LeaveTeamModalController($rootScope,$scope,$timeout,teamsService){function onClickLeaveTeam(){teamsService.leaveTeam($rootScope.selectedTeam.teamId).then(onLeaveTeamSuccess)}function init(){$rootScope.$on("session.teams.didRequestLeaveTeam",onDidRequestLeaveTeam),$rootScope.$on("session.teams.didLeaveTeam",onDidLeaveTeam)}function onDidRequestLeaveTeam(event,teamId){$scope.setComponentState("active")}function onLeaveTeamSuccess(remainingTeams){$timeout(function(){$rootScope.teams=remainingTeams,$rootScope.$emit("session.teams.didRequestSelectTeam",null),$rootScope.$emit("session.teams.didLeaveTeam",remainingTeams)})}function onDidLeaveTeam(event,remainingTeams){$scope.setComponentState("inactive")}init(),angular.extend($scope,{onClickLeaveTeam:onClickLeaveTeam})}angular.module("app").controller("LeaveTeamModalController",LeaveTeamModalController),LeaveTeamModalController.$inject=["$rootScope","$scope","$timeout","teamsService"]}(window,window.angular),function(window,angular,undefined){function AddressFormController($rootScope,$scope){function isEmpty(){return!(0!==$scope.addresses.length||0!==$scope.addressInput.length)}function isExistingAddressString(addressString){for(var index=$scope.addresses.length;--index>-1;)if($scope.addresses[index].address===addressString)return!0;return!1}function isNonEmptyString(s){return!!("string"==typeof s&&s.length>0)}function isValidAddressString(addressString){var addressParts,localPart;return addressString.length>MAX_ADDRESS_LENGTH?!1:(addressParts=addressString.split("@").filter(isNonEmptyString),2!==addressParts.length?!1:(localPart=addressParts[0],localPart.length>MAX_LOCAL_COMPONENT_LENGTH?!1:!!addressString.match(VALID_ADDRESS_MATCH)))}function isUserAddressString(addressString){return!(!$rootScope.user.email||addressString!==$rootScope.user.email)}function isValidAddressList(addressList){addressList instanceof Array||(addressList=[]);for(var index=addressList.length;--index>-1;)if(!addressList[index].valid)return!1;return!0}function addAddressString(addressString){if("undefined"==typeof addressString&&(addressString=$scope.addressInput.trim()),addressString&&!isExistingAddressString(addressString)){var newAddress={address:addressString,valid:isValidAddressString(addressString)&&!isUserAddressString(addressString)};$scope.addresses.push(newAddress)}}function removeAddress(address){if("undefined"==typeof address)address=$scope.addresses.pop();else{var index=$scope.addresses.indexOf(address);index>-1&&$scope.addresses.splice(index,1)}return address}function init(){}var MAX_ADDRESS_LENGTH=255,MAX_LOCAL_COMPONENT_LENGTH=70,LOCAL_COMPONENT_PART_CLASS=/[^<>()\[\]\\.,;:\s@\"]/,LOCAL_COMPONENT_MATCH="("+LOCAL_COMPONENT_PART_CLASS.source+"+(\\."+LOCAL_COMPONENT_PART_CLASS.source+'+)*)|(".+")',DOMAIN_COMPONENT_DOMAINNAME_MATCH=/([a-zA-Z\-0-9\+]{1,63}\.)+/,DOMAIN_COMPONENT_IPADDRESS_MATCH=/\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\]/,DOMAIN_COMPONENT_TLD_MATCH=/[a-zA-Z]{2,}/,DOMAIN_COMPONENT_MATCH="("+DOMAIN_COMPONENT_DOMAINNAME_MATCH.source+DOMAIN_COMPONENT_TLD_MATCH.source+")|("+DOMAIN_COMPONENT_IPADDRESS_MATCH.source+")",VALID_ADDRESS_MATCH=new RegExp("^("+LOCAL_COMPONENT_MATCH+")@("+DOMAIN_COMPONENT_MATCH+")$");init(),angular.extend($scope,{isEmpty:isEmpty,isExistingAddressString:isExistingAddressString,isValidAddressList:isValidAddressList,addAddressString:addAddressString,removeAddress:removeAddress})}angular.module("app").controller("AddressFormController",AddressFormController),AddressFormController.$inject=["$rootScope","$scope"]}(window,window.angular),function(window,angular,undefined){function AgreementFormController($rootScope,$scope,$timeout,agreementsService,paths){function submit(){if($scope.agreement.isShallow)onAcceptAgreementsSuccess();else{$scope.lock();var agreementIds=[$scope.agreement.agreementId];agreementsService.acceptAgreements($rootScope.selectedTeam.teamId,agreementIds).then(onAcceptAgreementsSuccess)}}function init(){$scope.agreement=null,$scope.$watch("languageIsoCode",onChangeLanguageIsoCode),$scope.languageIsoCode=DEFAULT_LANGUAGE_ISO_CODE,$rootScope.$watch("selectedTeam",onDidSelectTeam),$rootScope.$on("session.notifications.agreementsOutstanding",onAgreementsOutstanding),$rootScope.$on("session.agreements.didRequestDisplayAgreement",onDidRequestDisplayAgreement)}function onDidSelectTeam(){$rootScope.selectedTeam&&($scope.notificationHistory={},$scope.hasAgreed=!1,$scope.agreement=null)}function onAgreementsOutstanding(event,data){fetchPendingAgreements()}function fetchPendingAgreements(){return $scope.lock(),agreementsService.getPendingAgreements($rootScope.selectedTeam.teamId,$scope.languageIsoCode).then(processAgreements)}function processAgreements(agreements){return $scope.unlock(),angular.forEach(agreements,function(agreement){if(cache(agreement),!(agreement.agreementId in $scope.notificationHistory)){if($rootScope.userIsAgent()&&$rootScope.programIsExpired())return;requestDisplayAgreementNotification(agreement),$scope.notificationHistory[agreement.agreementId]=!0}})}function isCached(agreement){return!!(agreement.agreementId in _agreementsCache&&agreement.languageIsoCode in _agreementsCache[agreement.agreementId])}function cache(agreement){agreement.agreementId in _agreementsCache||(_agreementsCache[agreement.agreementId]={}),_agreementsCache[agreement.agreementId][agreement.languageIsoCode]=agreement}function requestDisplayAgreementNotification(agreement){var resolve={agent:$rootScope.selectedTeam.agent,agreement:agreement};$rootScope.$emit("app.notifications.didRequestDisplayNotification",{id:"notifications.agreementStatusNotification_"+agreement.agreementId,priority:1,controller:"AgreementStatusNotificationController",templateUrl:paths.templates+"/components/notifications/tpl.agreement-status-notification.html",resolve:resolve})}function onDidRequestDisplayAgreement(event,agreementOrAgreementId){var agreement;agreement="string"==typeof agreementOrAgreementId?_agreementsCache[agreementOrAgreementId][$scope.languageIsoCode]:agreementOrAgreementId,$scope.hasAgreed=!1,"resolve"in agreement&&angular.extend($scope,agreement.resolve),isCached(agreement)||cache(agreement),$scope.languageIsoCode in _agreementsCache[agreement.agreementId]?$scope.agreement=_agreementsCache[agreement.agreementId][$scope.languageIsoCode]:($scope.agreement=agreement,$scope.languageIsoCode=agreement.languageIsoCode),$scope.setComponentState("active")}function onChangeLanguageIsoCode(languageIsoCode,prevLanguageIsoCode){if(languageIsoCode!==prevLanguageIsoCode){if(!languageIsoCode)return void($scope.agreement&&$scope.agreement.localizedAgreements&&($scope.languageIsoCode=$scope.agreement.localizedAgreements[0].languageIsoCode));if($scope.hasAgreed=!1,$scope.agreement.agreementId in _agreementsCache&&$scope.languageIsoCode in _agreementsCache[$scope.agreement.agreementId])$scope.agreement=_agreementsCache[$scope.agreement.agreementId][$scope.languageIsoCode];else{var promise=fetchPendingAgreements();$scope.agreement&&promise.then(function(agreements){$scope.agreement=agreements.reduce(function(prev,agreement){return agreement.agreementId===$scope.agreement.agreementId?agreement:null},null)})}}}function onAcceptAgreementsSuccess(){$scope.unlock(),$scope.setComponentState("inactive"),$timeout(function(){$rootScope.$emit("session.agreements.didAcceptAgreement",$scope.agreement),$scope.hasAgreed=!1,$scope.agreement=null},500)}var DEFAULT_LANGUAGE_ISO_CODE="en",_agreementsCache={};init(),angular.extend($scope,{submit:submit})}angular.module("app").controller("AgreementFormController",AgreementFormController),AgreementFormController.$inject=["$rootScope","$scope","$timeout","agreementsService","paths"]}(window,window.angular),function(window,angular,undefined){function InviteFormController($rootScope,$scope,$timeout,invitesService){function isEmpty(){return $scope.adminAddressInput.length?!1:$scope.adminAddressList.length?!1:$scope.memberAddressInput.length?!1:$scope.memberAddressList.length?!1:!0}function isValid(){return $scope.adminAddressInput&&!$scope.adminAddressInput.match(VALID_ADDRESS_STRING_REGEX)?!1:isValidAddressList($scope.adminAddressList)?$scope.memberAddressInput&&!$scope.memberAddressInput.match(VALID_ADDRESS_STRING_REGEX)?!1:isValidAddressList($scope.memberAddressList)?!0:!1:!1}function submit(){if($scope.showError=!0,isValid()){$scope.showError=!1;var teamId=$rootScope.selectedTeam.teamId,invites=[];invites.push.apply(invites,$scope.adminAddressList.map(function(address){return{recipientEmail:address.address,recipientRole:"admin"}})),invites.push.apply(invites,$scope.memberAddressList.map(function(address){return{recipientEmail:address.address,recipientRole:"member"}})),invitesService.sendInvites(teamId,invites).then(onSubmitInvitesSuccess)["catch"](onSubmitInvitesError)}}function init(){$scope.adminAddressList=[],$scope.memberAddressList=[],resetForm(),$scope.$watch(getAddressCount,resetErrorIfEmpty)}function flushArray(array){for(var index=array.length;index--;)array.pop()}function resetForm(){$scope.adminAddressInput="",$scope.memberAddressInput="",flushArray($scope.adminAddressList),flushArray($scope.memberAddressList),resetError()}function resetError(){$scope.showError=!1}function resetErrorIfEmpty(){isEmpty()&&resetError()}function getAddressCount(){return $scope.adminAddressList.length+$scope.memberAddressList.length}function isValidAddressList(addressList){addressList instanceof Array||(addressList=[]);for(var index=addressList.length;--index>-1;)if(!addressList[index].valid)return!1;return!0}function onSubmitInvitesSuccess(invites){$rootScope.$emit("app.component.didRequestStateChange",{componentId:"ui.modals.sendInvitesModal",componentState:"inactive"}),$timeout(function(){$rootScope.$emit("session.invites.didSendInvites",{invites:invites})},750),resetForm()}function onSubmitInvitesError(rejectedAddressString){function markInvalidAddress(address){address.address===rejectedAddressString&&(address.valid=!1)}$scope.showError=!0,angular.forEach($scope.adminAddressList,markInvalidAddress),angular.forEach($scope.memberAddressList,markInvalidAddress)}var VALID_ADDRESS_STRING_REGEX=/(^[\S]+)@([\S]+)/g;init(),angular.extend($scope,{isEmpty:isEmpty,isValid:isValid,submit:submit})}angular.module("app").controller("InviteFormController",InviteFormController),InviteFormController.$inject=["$rootScope","$scope","$timeout","invitesService"]}(window,window.angular),function(window,angular,undefined){function AutoRenewalFormController($rootScope,$scope,$timeout,teamsService){function requestToEnableAutoRenewal(){$rootScope.$emit("session.teams.didRequestSetAutoRenewal",!0)}function requestToDisableAutoRenewal(){$rootScope.$emit("session.teams.didRequestSetAutoRenewal",!1)}function dismiss(){$scope.hasAgreed=!1,$scope.setComponentState("inactive")}function init(){$scope.hasAgreed=!1,$rootScope.$on("session.teams.didSelectTeam",onDidSelectTeam),$rootScope.$on("session.teams.didAcceptAgentTransfer",onDidAcceptAgentTransfer),$rootScope.$on("session.teams.didRequestSetAutoRenewal",onDidRequestAutoRenewalSet)}function onDidSelectTeam(){$rootScope.selectedTeam&&$rootScope.programIsEnrolled()&&($scope.localizedAutoRenewPrice=$rootScope.selectedTeam.program.autoRenewPrice,setAutoRenewalEnabled($rootScope.selectedTeam.program.autoRenew,!0))}function onDidAcceptAgentTransfer(){setAutoRenewalEnabled($rootScope.selectedTeam.program.autoRenew)}function onDidRequestAutoRenewalSet(event,autoRenewalEnabled){var wasEnabled,isEnabled;wasEnabled=$rootScope.selectedTeam.program.autoRenew,isEnabled=autoRenewalEnabled,isEnabled!==wasEnabled&&($scope.lock(),teamsService.setAutoRenewalStatus($rootScope.selectedTeam.teamId,isEnabled).then(setAutoRenewalEnabled.bind(null,isEnabled,!1))["catch"](setAutoRenewalEnabled.bind(null,wasEnabled,!1))["finally"](function(){$scope.unlock()}))}function setAutoRenewalEnabled(isEnabled,silent){$rootScope.selectedTeam.program.autoRenew=isEnabled,$timeout(function(){$scope.autoRenewalDisplayState=isEnabled?"enabled":"disabled",$scope.toggleModalClass("agreement",!isEnabled)},MODAL_DISPLAY_STATE_TRANSITION_DELAY),dismiss(),silent||$rootScope.$emit("session.teams.didSetAutoRenewal",isEnabled)}var MODAL_DISPLAY_STATE_TRANSITION_DELAY=500;init(),angular.extend($scope,{requestToEnableAutoRenewal:requestToEnableAutoRenewal,requestToDisableAutoRenewal:requestToDisableAutoRenewal,dismiss:dismiss})}angular.module("app").controller("AutoRenewalFormController",AutoRenewalFormController),AutoRenewalFormController.$inject=["$rootScope","$scope","$timeout","teamsService"]}(window,window.angular),function(window,angular,undefined){function AgentTransferFormController($rootScope,$scope,$filter,$q,teamsService,agreementsService,paths){function onSelectCandidate(candidate){$scope.selectedCandidate=candidate}function onClickReviewTransferAgreement(){$rootScope.$emit("session.agreements.didRequestDisplayAgreement",$scope.agreement),$scope.setComponentState("inactive")}function init(){$scope.addStateTransition("active","error",!0),$scope.paths=paths,$rootScope.$on("session.teams.didRequestAgentTransfer",onDidRequestAgentTransfer),$rootScope.$on("session.agreements.didAcceptAgreement",onDidAcceptAgreement),$rootScope.hasPendingAgentTransfer=!1,$rootScope.$on("session.notifications.agentTransferPending",function(){$rootScope.hasPendingAgentTransfer=!0}),$rootScope.$on("session.teams.didInitiateAgentTransfer",function(event,candidate){$rootScope.hasPendingAgentTransfer=!0;var resolve={agent:function(){return $scope.agent},agreement:function(){return $scope.agreement},candidate:function(){return candidate}},notification={id:"notifications.pendingAgentTransferNotification",controller:"TransferStatusNotificationController",templateUrl:paths.templates+"/components/notifications/tpl.transfer-status-notification.html",resolve:resolve};$rootScope.$emit("app.notifications.didRequestDisplayNotification",notification)}),$rootScope.$on("session.teams.didAcceptAgentTransfer",function(){$rootScope.hasPendingAgentTransfer=!1}),$rootScope.$on("session.teams.didCancelAgentTransfer",function(){$rootScope.hasPendingAgentTransfer=!1})}function onDidRequestAgentTransfer(){var teamId=$rootScope.selectedTeam.teamId,promises={agreement:agreementsService.getAgentTransferAgreement(teamId),candidates:teamsService.getTeamMembers(teamId)};$q.all(promises).then(function(data){$scope.selectedAgentCandidate=null,$scope.agent=$rootScope.selectedTeam.agent,$scope.agreement=data.agreement,$scope.agreement.isShallow=!0,$scope.agreement.resolve={team:$rootScope.selectedTeam};var candidates=data.candidates.admins.concat(data.candidates.members);$scope.candidates=$filter("orderBy")(candidates,"firstName"),$scope.setComponentState("active")})}function onDidAcceptAgreement(event,agreement){function onInitiateAgentTransferSuccess(){$rootScope.$emit("session.teams.didInitiateAgentTransfer",$scope.selectedCandidate)}function onInitiateAgentTransferError(res){$scope.setComponentState("error")}$scope.agreement&&$scope.agreement.agreementId===agreement.agreementId&&teamsService.initiateAgentTransfer($rootScope.selectedTeam.teamId,$scope.agreement.agreementId,$scope.selectedCandidate.teamMemberId).then(onInitiateAgentTransferSuccess)["catch"](onInitiateAgentTransferError)}init(),angular.extend($scope,{onSelectCandidate:onSelectCandidate,onClickReviewTransferAgreement:onClickReviewTransferAgreement})}angular.module("app").controller("AgentTransferFormController",AgentTransferFormController),AgentTransferFormController.$inject=["$rootScope","$scope","$filter","$q","teamsService","agreementsService","paths"]}(window,window.angular),function(window,angular,undefined){function RegistrationItemController($scope,eventsService){function onDidClickDownloadPassButton($event,registration){event.preventDefault();try{eventsService.openEventPass(registration.passDownloadUrl)}catch(error){}}function init(){}init(),angular.extend($scope,{onDidClickDownloadPassButton:onDidClickDownloadPassButton})}angular.module("app").controller("RegistrationItemController",RegistrationItemController),RegistrationItemController.$inject=["$scope","eventsService"]}(window,window.angular),function(window,angular,undefined){function InviteActionsBarController($rootScope,$scope,invitesService){function getSelectionDescription(){var selectedItems=$scope.getSelectedItems();return 1===selectedItems.length?"The developer ":"The "+selectedItems.length+" developers"}function resendInvites(invites){var teamId=$rootScope.selectedTeam.teamId;invitesService.sendInvites(teamId,invites).then(onResendInvitesSuccess)["catch"](onResendInvitesError)}function revokeInvites(invites){var teamId=$rootScope.selectedTeam.teamId,inviteIds=invites.map(function(invite){return invite.inviteId});invitesService.revokeInvites(teamId,inviteIds).then(onRevokeInvitesSuccess)["catch"](onRevokeInvitesError)}function init(){$scope.userHasPermission=$rootScope.userHasPermission}function onResendInvitesSuccess(invites){$rootScope.$emit("app.component.didRequestStateChange",{componentId:"ui.modals.resendInvitesModal",componentState:"inactive"}),$rootScope.$emit("session.invites.didSendInvites",{invites:invites}),$scope.toggleSelection($scope.items,!1)}function onResendInvitesError(res){}function onRevokeInvitesSuccess(invites){$rootScope.$emit("app.component.didRequestStateChange",{componentId:"ui.modals.revokeInvitesModal",componentState:"inactive"}),$rootScope.$emit("session.invites.didRevokeInvites",{invites:invites}),$scope.toggleSelection($scope.items,!1)}function onRevokeInvitesError(res){}init(),angular.extend($scope,{getSelectionDescription:getSelectionDescription,resendInvites:resendInvites,revokeInvites:revokeInvites})}angular.module("app").controller("InviteActionsBarController",InviteActionsBarController),InviteActionsBarController.$inject=["$rootScope","$scope","invitesService"]}(window,window.angular),function(window,angular,undefined){function PersonActionsBarController($rootScope,$scope,teamsService){function getSelectionDescription(){var selectedItems=$scope.getSelectedItems();return 1===selectedItems.length?"The developer ":"The "+selectedItems.length+" developers"}function setTeamMemberRoles(people,role){var teamId=$rootScope.selectedTeam.teamId,teamMemberIds=people.map(function(person){return person.teamMemberId});teamsService.setTeamMemberRoles(teamId,teamMemberIds,role).then(onSetTeamMemberRolesSuccess)["catch"](onSetTeamMemberRolesError)}function removeTeamMembers(people){var teamId=$rootScope.selectedTeam.teamId,teamMemberIds=people.map(function(person){return person.teamMemberId});teamsService.removeTeamMembers(teamId,teamMemberIds).then(onRemoveTeamMembersSuccess)["catch"](onRemoveTeamMembersError)}function init(){$scope.userHasPermission=$rootScope.userHasPermission}function onSetTeamMemberRolesSuccess(remainingTeamMembers){$rootScope.$emit("app.component.didRequestStateChange",{componentId:"ui.modals.setTeamMemberRolesModal",componentState:"inactive"}),$rootScope.$emit("session.teams.didMoveTeamMembers",{remainingTeamMembers:remainingTeamMembers}),$scope.toggleSelection($scope.items,!1)}function onSetTeamMemberRolesError(res){}function onRemoveTeamMembersSuccess(remainingTeamMembers){$rootScope.$emit("app.component.didRequestStateChange",{componentId:"ui.modals.removeTeamMembersModal",componentState:"inactive"}),$rootScope.$emit("session.teams.didRemoveTeamMembers",{remainingTeamMembers:remainingTeamMembers}),$scope.toggleSelection($scope.items,!1)}function onRemoveTeamMembersError(res){}init(),angular.extend($scope,{getSelectionDescription:getSelectionDescription,setTeamMemberRoles:setTeamMemberRoles,removeTeamMembers:removeTeamMembers})}angular.module("app").controller("PersonActionsBarController",PersonActionsBarController),PersonActionsBarController.$inject=["$rootScope","$scope","teamsService"]}(window,window.angular),function(window,angular,undefined){function ServerActionsBarController($rootScope,$scope,serversService){function getSelectionDescription(){var selectedItems=$scope.getSelectedItems();return 1===selectedItems.length?"The server ":"The "+selectedItems.length+" servers"}function removeServers(servers){var teamId=$rootScope.selectedTeam.teamId,udids=servers.map(function(server){return server.udid;
});serversService.removeServers(teamId,udids).then(onRemoveServersSuccess)["catch"](onRemoveServersError)}function init(){$scope.userHasPermission=$rootScope.userHasPermission}function onRemoveServersSuccess(servers){$rootScope.$emit("app.component.didRequestStateChange",{componentId:"ui.modals.removeServersModal",componentState:"inactive"}),$rootScope.$emit("session.servers.didRemoveServers",{remainingServers:servers}),$scope.toggleSelection($scope.items,!1)}function onRemoveServersError(servers){}init(),angular.extend($scope,{getSelectionDescription:getSelectionDescription,removeServers:removeServers})}angular.module("app").controller("ServerActionsBarController",ServerActionsBarController),ServerActionsBarController.$inject=["$rootScope","$scope","serversService"]}(window,window.angular),function(window,angular,undefined){function NotificationBarController($rootScope,$scope,$timeout){function init(){$scope.notifications=[],$rootScope.$on("app.notifications.didRequestDisplayNotification",onDidRequestDisplayNotification),$rootScope.$on("app.notifications.didRequestDismissNotification",onDidRequestDismissNotification),$rootScope.$on("app.notifications.didRequestFlushNotifications",onDidRequestFlushNotifications),$rootScope.$on("session.teams.didSelectTeam",onDidSelectTeam)}function flushNotifications(){$timeout(function(){$scope.notifications=[]})}function onDidRequestDisplayNotification(event,notification){var team=$rootScope.selectedTeam;notification.teamId=team?team.teamId:null,"undefined"==typeof notification.priority&&(notification.priority=DEFAULT_NOTIFICATION_PRIORITY);var isDisplayed=!1,displayIndex=-1;angular.forEach($scope.notifications,function(existingNotification,index){angular.equals(notification,existingNotification)&&(isDisplayed=!0,displayIndex=index)}),isDisplayed||(pendingNotificationsCount+=1),$timeout(function(){isDisplayed?$scope.notifications[displayIndex]=notification:($scope.notifications.push(notification),$rootScope.$emit("app.notifications.didDisplayNotification",notification),pendingNotificationsCount-=1)},NOTIFICATION_GROUP_DISPATCH_DELAY+pendingNotificationsCount*NOTIFICATION_SINGLE_OFFSET_DELAY)}function onDidRequestDismissNotification(event,notificationId){$scope.notifications=$scope.notifications.filter(function(notification){return!(notification.id===notificationId)})}function onDidRequestFlushNotifications(){flushNotifications()}function onDidSelectTeam(){flushNotifications()}var DEFAULT_NOTIFICATION_PRIORITY=2,NOTIFICATION_GROUP_DISPATCH_DELAY=0,NOTIFICATION_SINGLE_OFFSET_DELAY=100,pendingNotificationsCount=0;init(),angular.extend($scope,{isTeamRelatedView:$rootScope.isTeamRelatedView})}angular.module("app").controller("NotificationBarController",NotificationBarController),NotificationBarController.$inject=["$rootScope","$scope","$timeout"]}(window,window.angular),function(window,angular,undefined){function AgreementStatusNotificationController($rootScope,$scope,$location,emailsService,paths){function isInInitialAgreementWindow(){return!!($scope.agreement.dateAgreeBy>Date.now())}function canAcceptAgreement(agreement){return!(!$rootScope.userIsAgent()&&"AGENT"===agreement.role)}function onClickReviewAgreement(){$rootScope.$emit("session.agreements.didRequestDisplayAgreement",$scope.agreement)}function init(){isInInitialAgreementWindow()||($scope.priority=0),$scope.$on("$destroy",$rootScope.$on("session.teams.didAcceptAgentTransfer",reload)),$scope.$on("$destroy",$rootScope.$on("session.agreements.didAcceptAgreement",onDidAcceptAgreement)),reload()}function reload(){if($rootScope.selectedTeam&&($scope.agent=$rootScope.selectedTeam.agent,!canAcceptAgreement($scope.agreement))){var templateUrl=paths.templates+"/emails/agreement-status-email.txt",scope={domain:$location.host(),user:$rootScope.user,team:$rootScope.selectedTeam,agent:$scope.agent,agreement:$scope.agreement};emailsService.getRenderedTemplate(templateUrl,scope).then(onGetRenderedTemplateSuccess)}}function onGetRenderedTemplateSuccess(templateString){var emailRecipient=$scope.agent.email,emailSubject="Your "+$scope.agreement.title+" has been updated.",emailBody=templateString;$scope.mailUrl=emailsService.composeUrl({to:emailRecipient,subject:emailSubject,body:emailBody})}function onDidAcceptAgreement(event,agreement){$scope.agreement&&$scope.agreement.agreementId===agreement.agreementId&&$rootScope.$emit("app.notifications.didRequestDismissNotification",$scope.id)}init(),angular.extend($scope,{isInInitialAgreementWindow:isInInitialAgreementWindow,canAcceptAgreement:canAcceptAgreement,onClickReviewAgreement:onClickReviewAgreement})}angular.module("app").controller("AgreementStatusNotificationController",AgreementStatusNotificationController),AgreementStatusNotificationController.$inject=["$rootScope","$scope","$location","emailsService","paths"]}(window,window.angular),function(window,angular,undefined){function MembershipStatusNotificationController($rootScope,$scope,$window,$location,$q,teamsService,emailsService,paths,externalUrls){function hasPendingRequiredAgreements(){return!!($scope.requiredAgreementIds.length>0)}function hasAppleOnlineStores(){return!!($scope.onlineStoreOptions&&$scope.onlineStoreOptions.length>0)}function canRenewMembership(){return $rootScope.programIsIT()?!1:!($scope.hasPendingRequiredAgreements()!==!1&&"expired"!==$scope.membershipStatus)}function canEnableAutoRenew(){return!("pending"!==$scope.membershipStatus||!$rootScope.userHasPermission("team.autorenew.update")||$rootScope.selectedTeam.program.autoRenew!==!1)}function redirectToPurchaseUrl(purchaseUrl){$window.location.href=purchaseUrl}function onDidClickRenewButton(languageIsoCode){"undefined"==typeof languageIsoCode&&(languageIsoCode=DEFAULT_LANGUAGE_ISO_CODE);var deferredRenewalRedirect=$q.defer(),promise=deferredRenewalRedirect.promise;if(promise.then(function(){teamsService.getRenewalPurchaseUrl($rootScope.selectedTeam.teamId,languageIsoCode).then(redirectToPurchaseUrl)}),$scope.hasPendingRequiredAgreements()){var agreementId=$scope.requiredAgreementIds[0],unbindListener=$rootScope.$on("session.agreements.didAcceptAgreement",function(event,agreement){agreement.agreementId===agreementId&&(unbindListener(),deferredRenewalRedirect.resolve())});$scope.$on("$destroy",unbindListener),$rootScope.$emit("session.agreements.didRequestDisplayAgreement",agreementId)}else deferredRenewalRedirect.resolve()}function init(){$scope.programIsIT=$rootScope.programIsIT,$scope.$on("$destroy",$rootScope.$on("session.teams.didAcceptAgentTransfer",reload)),$scope.$on("$destroy",$rootScope.$on("session.agreements.didAcceptAgreement",onDidAcceptAgreement)),reload()}function reload(){var templateUrl,scope;$rootScope.selectedTeam&&($rootScope.userIsAgent()||(templateUrl=paths.templates+"/emails/membership-status-email.txt",scope={domain:$location.host(),user:$rootScope.user,team:$rootScope.selectedTeam,agent:$scope.agent,membershipStatus:$scope.membershipStatus},emailsService.getRenderedTemplate(templateUrl,scope).then(onGetRenderedTemplateSuccess)))}function onGetRenderedTemplateSuccess(templateString){var emailRecipient=$scope.agent.email,emailSubject="Our team's Developer Program Membership "+("pending"===$scope.membershipStatus?"is expiring":"has expired")+".",emailBody=templateString;$scope.mailUrl=emailsService.composeUrl({to:emailRecipient,subject:emailSubject,body:emailBody})}function onDidAcceptAgreement(event,agreement){var agreementId=agreement.agreementId,agreementIdIndex=$scope.requiredAgreementIds.indexOf(agreementId);agreementIdIndex>-1&&$scope.requiredAgreementIds.splice(agreementIdIndex,1)}var DEFAULT_LANGUAGE_ISO_CODE="en";init(),angular.extend($scope,{hasPendingRequiredAgreements:hasPendingRequiredAgreements,hasAppleOnlineStores:hasAppleOnlineStores,canRenewMembership:canRenewMembership,canEnableAutoRenew:canEnableAutoRenew,onDidClickRenewButton:onDidClickRenewButton})}angular.module("app").controller("MembershipStatusNotificationController",MembershipStatusNotificationController),MembershipStatusNotificationController.$inject=["$rootScope","$scope","$window","$location","$q","teamsService","emailsService","paths","externalUrls"]}(window,window.angular),function(window,angular,undefined){function PaymentStatusNotificationController($rootScope,$scope,$timeout){function init(){$scope.$on("$destroy",$rootScope.$on("session.teams.didSetAutoRenewal",onDidSetAutoRenewal))}function onDidSetAutoRenewal(event,autoRenewalEnabled){autoRenewalEnabled||dismiss()}function dismiss(){$rootScope.$emit("app.notifications.didRequestDismissNotification",$scope.id)}init()}angular.module("app").controller("PaymentStatusNotificationController",PaymentStatusNotificationController),PaymentStatusNotificationController.$inject=["$rootScope","$scope","$timeout"]}(window,window.angular),function(window,angular,undefined){function TransferStatusNotificationController($rootScope,$scope,$timeout,teamsService,agreementsService,user){function onClickReviewAgreement(){function onGetAgentTransferAgreementSuccess(agreement){$scope.agreement=agreement,$scope.agreement.isShallow=!0,$scope.agreement.resolve={team:$rootScope.selectedTeam},$rootScope.$emit("session.agreements.didRequestDisplayAgreement",$scope.agreement)}agreementsService.getAgentTransferAgreement($rootScope.selectedTeam.teamId).then(onGetAgentTransferAgreementSuccess)}function init(){$scope.priority=$rootScope.userIsAgent()?1:2,$scope.$on("$destroy",$rootScope.$on("session.teams.didCancelAgentTransfer",dismiss)),$scope.$on("$destroy",$rootScope.$on("session.teams.didDenyAgentTransfer",dismiss)),$scope.$on("$destroy",$rootScope.$on("session.agreements.didAcceptAgreement",onDidAcceptAgreement))}function dismiss(){$timeout(function(){$rootScope.$emit("app.notifications.didRequestDismissNotification",$scope.id)},350)}function onDidAcceptAgreement(event,agreement){function onAcceptAgentTransferSuccess(team){$rootScope.selectedTeam=team,$rootScope.$emit("app.notifications.didRequestDismissNotifications"),$rootScope.$emit("session.teams.didAcceptAgentTransfer")}$scope.agreement&&$scope.agreement.agreementId===agreement.agreementId&&teamsService.acceptAgentTransfer($rootScope.selectedTeam.teamId,$scope.agreement.agreementId).then(onAcceptAgentTransferSuccess)}init(),angular.extend($scope,{onClickReviewAgreement:onClickReviewAgreement})}angular.module("app").controller("TransferStatusNotificationController",TransferStatusNotificationController),TransferStatusNotificationController.$inject=["$rootScope","$scope","$timeout","teamsService","agreementsService","user"]}(window,window.angular),function(window,angular,undefined){function EventsViewController($rootScope,$scope,teamsService,eventsService){function init(){$scope.eventRegistrations=[],teamsService.getTeams().then(onGetTeamsSuccess).then(eventsService.getEventRegistrations).then(onGetEventRegistrationsSuccess)}function onGetTeamsSuccess(teams){$scope.teams=teams}function onGetEventRegistrationsSuccess(registrations){$scope.hasRegistrations=!!registrations.length,$scope.hasRegistrations&&($scope.registrations=getEventRegistrationsMap(registrations))}function getEventRegistrationsMap(registrations){registrations=angular.copy(registrations);var eventType,team,registrationsMap={};return angular.forEach(registrations,function(registration){team=getTeamById(registration.teamId),team&&(registration.teamName=team.name),eventType=registration.eventType,eventType in registrationsMap||(registrationsMap[eventType]=[]),registrationsMap[eventType].push(registration)}),registrationsMap}function getTeamById(teamId){var teams=$rootScope.teams||[];return teams.reduce(function(prev,team){return team.teamId===teamId?team:prev},null)}init()}angular.module("app").controller("EventsViewController",EventsViewController),EventsViewController.$inject=["$rootScope","$scope","teamsService","eventsService"]}(window,window.angular),function(window,angular,undefined){function MembershipViewController($rootScope,$scope,$timeout,permissionsService,agreementsService){function getContactFormUrl(requestType){var entityType=$rootScope.programIsIndividual()?"individual":"company",url="/contact/submit/?entityType="+entityType+"&requestType="+requestType;return url}function onClickToggleShouldDisplayAgreements(){$timeout(function(){$scope.shouldDisplayAgreements=!$scope.shouldDisplayAgreements})}function onClickLeaveTeam(){$rootScope.$emit("session.teams.didRequestLeaveTeam",$rootScope.selectedTeam.teamId)}function init(){$scope.shouldDisplayMembershipSettings=!1,$scope.shouldDisplayAgreements=!1,$scope.agreements=[],$rootScope.$on("session.teams.didSelectTeam",reload),$rootScope.$on("session.agreements.didAcceptAgreement",reload),$rootScope.$on("session.teams.didAcceptAgentTransfer",reload),reload()}function reload(){$rootScope.selectedTeam&&$rootScope.programIsEnrolled()&&($scope.agreements=[],fetchPastAgreements(),permissionsService.getPermissions($rootScope.selectedTeam.teamId).then(onGetPermissionsSuccess))}function onGetPermissionsSuccess(){$timeout(function(){$scope.shouldDisplayMembershipSettings=function(){var settingsPermissions=["team.autorenew.update","team.member.leave","team.agenttransfer.initiate"];return settingsPermissions.reduce(function(prev,identifier){return $rootScope.userHasPermission(identifier)||prev},!1)}()})}function fetchPastAgreements(){function onGetPastAgreementsSuccess(agreements){$scope.agreements=agreements}agreementsService.getPastAgreements($rootScope.selectedTeam.teamId).then(onGetPastAgreementsSuccess)}init(),angular.extend($scope,{getContactFormUrl:getContactFormUrl,onClickToggleShouldDisplayAgreements:onClickToggleShouldDisplayAgreements,onClickLeaveTeam:onClickLeaveTeam})}angular.module("app").controller("MembershipViewController",MembershipViewController),MembershipViewController.$inject=["$rootScope","$scope","$timeout","permissionsService","agreementsService"]}(window,window.angular),function(window,angular,undefined){function PeopleViewController($rootScope,$scope,$timeout,permissionsService,teamsService,invitesService,user){function personIsUser(person){return!(person.email!==user.email)}function clearFilterQuery(){$scope.filterQuery=""}function init(){$scope.filterQuery="",$rootScope.$on("session.teams.didSelectTeam",reload),$rootScope.$on("session.teams.didAcceptAgentTransfer",reload),$rootScope.$on("session.invites.didSendInvites",onInvitesSent),$rootScope.$on("session.invites.didRevokeInvites",onInvitesRevoked),$rootScope.$on("session.teams.didMoveTeamMembers",onTeamMembersMoved),$rootScope.$on("session.teams.didRemoveTeamMembers",onTeamMembersRemoved),reload()}function reload(){$rootScope.selectedTeam&&$rootScope.programIsEnrolled()&&($scope.persons={},permissionsService.getPermissions($rootScope.selectedTeam.teamId).then(onGetPermissionsSuccess),teamsService.getTeamMembers($rootScope.selectedTeam.teamId).then(onGetTeamMembersSuccess))}function onGetPermissionsSuccess(){$rootScope.userHasPermission("team.member.invite.get")&&invitesService.getInvites($rootScope.selectedTeam.teamId).then(onGetInvitesSuccess)}function onGetTeamMembersSuccess(persons){$timeout(function(){$scope.persons=persons,$scope.persons.agents=[$rootScope.selectedTeam.agent]})}function getFilterForSearchableProperties(queryProperty,searchableProperties){return function(item){var value,query=($scope[queryProperty]||"").toLowerCase();return searchableProperties.reduce(function(prev,prop){return!prev&&prop in item?(value=item[prop].toString().toLowerCase(),!!(value.indexOf(query)>-1)):prev},!1)}}function onTeamMembersMoved(event,data){$timeout(function(){$scope.persons=data.remainingTeamMembers,$scope.persons.agents=[$rootScope.selectedTeam.agent]})}function onTeamMembersRemoved(event,data){$timeout(function(){$scope.persons=data.remainingTeamMembers,$scope.persons.agents=[$rootScope.selectedTeam.agent]})}function onGetInvitesSuccess(invites){$timeout(function(){$scope.invites=invites.sort(sortByDateExpires)})}function onInvitesSent(event,data){$timeout(function(){$scope.invites=data.invites.sort(sortByDateExpires)})}function onInvitesRevoked(event,data){$timeout(function(){$scope.invites=data.invites.sort(sortByDateExpires)})}function sortByDateExpires(inviteA,inviteB){return inviteA.dateExpires-inviteB.dateExpires}var SEARCHABLE_INVITE_PROPERTIES=["inviterName","recipientEmail","recipientRole"],SEARCHABLE_PERSON_PROPERTIES=["firstName","lastName","email"];init(),angular.extend($scope,{personIsUser:personIsUser,inviteFilter:getFilterForSearchableProperties("filterQuery",SEARCHABLE_INVITE_PROPERTIES),personFilter:getFilterForSearchableProperties("filterQuery",SEARCHABLE_PERSON_PROPERTIES),clearFilterQuery:clearFilterQuery})}angular.module("app").controller("PeopleViewController",PeopleViewController),PeopleViewController.$inject=["$rootScope","$scope","$timeout","permissionsService","teamsService","invitesService","user"]}(window,window.angular),function(window,angular,undefined){function ServersViewController($rootScope,$scope,serversService){function isStaticServersTable(){return!($rootScope.userHasPermission("team.server.remove")!==!1)}function init(){$rootScope.$on("session.teams.didSelectTeam",reload),$rootScope.$on("session.teams.didAcceptAgentTransfer",reload),$rootScope.$on("session.servers.didRemoveServers",onServersRemoved),reload()}function reload(){$rootScope.selectedTeam&&$rootScope.programIsEnrolled()&&serversService.getServers($rootScope.selectedTeam.teamId).then(onGetServersSuccess)}function onGetServersSuccess(servers){$scope.servers=servers,$scope.hadServers=!!($scope.servers.length>0)}function onServersRemoved(event,data){$scope.servers=data.remainingServers}init(),angular.extend($scope,{isStaticServersTable:isStaticServersTable})}angular.module("app").controller("ServersViewController",ServersViewController),ServersViewController.$inject=["$rootScope","$scope","serversService"]}(window,window.angular),function(window,angular,undefined){function SupportViewController($rootScope,$scope,permissionsService,supportRequestsService){function init(){$rootScope.$on("session.teams.didSelectTeam",reload),$rootScope.$on("session.teams.didAcceptAgentTransfer",reload),reload()}function reload(){$rootScope.selectedTeam&&$rootScope.programIsEnrolled()&&($scope.teamCanPurchaseIncidents=!1,permissionsService.getPermissions($rootScope.selectedTeam.teamId).then(onGetPermissionsSuccess))}function onGetPermissionsSuccess(){$rootScope.userHasPermission("team.support.purchase")&&($rootScope.programIsExpired()||($scope.teamCanPurchaseIncidents=!0),supportRequestsService.getSupportRequests($rootScope.selectedTeam.teamId).then(onGetSupportRequestsSuccess))}function onGetSupportRequestsSuccess(data){$scope.products=data.products,$scope.usedIncidents=data.usedIncidents,$scope.unusedIncidents=data.unusedIncidents}init()}angular.module("app").controller("SupportViewController",SupportViewController),SupportViewController.$inject=["$rootScope","$scope","permissionsService","supportRequestsService"]}(window,window.angular),function(window,angular){function InterstitialViewController($rootScope,$scope,$window,$timeout,storageService,externalUrls){function onClickToggleShouldSkipInterstitial(){$scope.shouldSkipInterstitial=!$scope.shouldSkipInterstitial}function onClickExternalLinkButton($event){$event.preventDefault(),$scope.shouldSkipInterstitial&&$window.history.back(),$timeout(function(){$window.location.href=$scope.externalUrl},15)}function init(){$scope.externalUrl=externalUrls[$rootScope.currentView].router,$scope.shouldSkipInterstitial=!1,$scope.skippedInterstitials=getSkippedInterstitials(),$scope.$watch("shouldSkipInterstitial",onChangeShouldSkipInterstitial)}function getSkippedInterstitials(){var skippedInterstitialsSerialized=storageService.get(preferenceStorageKey);return JSON.parse(skippedInterstitialsSerialized)||[]}function setSkippedInterstitials(interstitials){var skippedInterstitialsSerialized=JSON.stringify(interstitials);storageService.set(preferenceStorageKey,skippedInterstitialsSerialized)}function onChangeShouldSkipInterstitial(){var interstitialKey=$rootScope.currentView,index=$scope.skippedInterstitials.indexOf(interstitialKey),hasStoredInterstitial=!(-1===index);$scope.shouldSkipInterstitial&&!hasStoredInterstitial?$scope.skippedInterstitials.push(interstitialKey):hasStoredInterstitial&&$scope.skippedInterstitials.splice(index,1),setSkippedInterstitials($scope.skippedInterstitials)}var preferenceStorageKey="adp.preferences.skippedInterstitials";init(),angular.extend($scope,{onClickExternalLinkButton:onClickExternalLinkButton,onClickToggleShouldSkipInterstitial:onClickToggleShouldSkipInterstitial})}angular.module("app").controller("InterstitialViewController",InterstitialViewController),InterstitialViewController.$inject=["$rootScope","$scope","$window","$timeout","storageService","externalUrls"]}(window,window.angular),function(window,angular,undefined){function AppController($rootScope,user,paths,roles){function userHasTeams(){return!!($rootScope.teams&&$rootScope.teams.length>0)}function userHasTeamSelected(){return!!$rootScope.selectedTeam}function userHasEventRegistrations(){return!!($rootScope.user.eventRegistrations&&$rootScope.user.eventRegistrations.length>0)}function userIsMember(){return userIs(roles.MEMBER)}function userIsAdmin(){return userIs(roles.ADMIN)}function userIsAgent(){return userIs(roles.AGENT)}function userHasPermissionsLoaded(){return!!$rootScope.user.permissions}function userHasPermission(identifier){return!!(userHasPermissionsLoaded()&&$rootScope.user.permissions.indexOf(identifier)>-1)}function programIsEnrolled(){return!(!userHasTeamSelected()||$rootScope.selectedTeam.pendingEnrollment)}function programIsExpired(){return!!(programIsEnrolled()&&null!==$rootScope.selectedTeam.program.dateExpires&&$rootScope.selectedTeam.program.dateExpires<=Date.now())}function programIs(programTypeIndentifier){return!(!$rootScope.selectedTeam||$rootScope.selectedTeam.entityType!==programTypeIndentifier)}function programCanPurchaseSupport(){return userHasPermission("team.support.purchase")}function isTeamRelatedView(view){return"undefined"==typeof view&&(view=$rootScope.currentView),!!(view&&TEAM_RELATED_VIEWS.indexOf(view)>-1)}function isInterstitialView(view){return"undefined"==typeof view&&(view=$rootScope.currentView),!!(view&&INTERSTITIAL_VIEWS.indexOf(view)>-1)}function init(){$rootScope.user=user,$rootScope.paths=paths}function userIs(role){return!(!programIsEnrolled()||$rootScope.selectedTeam.userRole!==role)}var ENTITY_TYPES={INDIVIDUAL:"i",COMPANY:"c",ENTERPRISE:"h",UNIVERSITY:"e",IOS_FOR_IT:"t"},TEAM_RELATED_VIEWS=["enrollment","overview","membership","people","itunes-connect","cloudkit-dashboard","servers","support"],INTERSTITIAL_VIEWS=["itunes-connect","cloudkit-dashboard","forums","bug-reporter","enrollment","error"];init(),angular.extend($rootScope,{userHasTeams:userHasTeams,userHasTeamSelected:userHasTeamSelected,userHasEventRegistrations:userHasEventRegistrations,userIsMember:userIsMember,userIsAdmin:userIsAdmin,userIsAgent:userIsAgent,userHasPermissionsLoaded:userHasPermissionsLoaded,userHasPermission:userHasPermission,programIsEnrolled:programIsEnrolled,programIsExpired:programIsExpired,programIsIndividual:programIs.bind(null,ENTITY_TYPES.INDIVIDUAL),programIsCompany:programIs.bind(null,ENTITY_TYPES.COMPANY),programIsEnterprise:programIs.bind(null,ENTITY_TYPES.ENTERPRISE),programIsUniversity:programIs.bind(null,ENTITY_TYPES.UNIVERSITY),programIsIT:programIs.bind(null,ENTITY_TYPES.IOS_FOR_IT),programCanPurchaseSupport:programCanPurchaseSupport,isTeamRelatedView:isTeamRelatedView,isInterstitialView:isInterstitialView})}angular.module("app").controller("AppController",AppController),AppController.$inject=["$rootScope","user","paths","roles"]}(window,window.angular),function(window,angular,undefined){function uiComponentFactory($rootScope,$timeout){return{restrict:"EA",scope:!0,compile:function(elem,attrs){return{pre:function(scope,elem,attrs){function getId(){return _componentId}function getState(){return _componentState}function setState(state,silent){return"boolean"!=typeof silent&&(silent=!1),isValidState(state)?(state!==_componentState&&$timeout(function(){_componentPreviousState=_componentState,_componentState=state,_uiComponentBroadcast&&!silent&&broadcastStateChange()}),!0):!1}function advanceState(){return setState(_stateTransitions[_componentState])}function addStateTransition(fromState,toState,isCyclical){if("string"!=typeof fromState||"string"!=typeof toState)throw"Invalid parameters passed to 'addStateTransition' method!";_stateTransitions[fromState]=toState,isCyclical&&(_stateTransitions[toState]=fromState)}function init(){attrs.uiComponentBroadcast&&(_uiComponentBroadcast=scope.$eval(attrs.uiComponentBroadcast)),_unbindTransitionRequestListener=$rootScope.$on("app.component.didRequestStateChange",processStateChangeRequest),scope.$on("destroy",_unbindTransitionRequestListener),addStateTransition("active","inactive",!0),attrs.$observe("uiComponent",onChangeComponentId)}function onChangeComponentId(componentId){_componentId=componentId,_componentId&&setState(attrs.uiComponentState)||setState("inactive")}function isValidState(state){return!!(state&&state in _stateTransitions&&_stateTransitions.hasOwnProperty(state))}function broadcastStateChange(){var data={componentId:_componentId,componentState:_componentState,componentPreviousState:_componentPreviousState};$rootScope.$emit("app.component.didChangeState",data)}function processStateChangeRequest(event,request){_componentId.match(request.componentId)&&$timeout(function(){return"string"==typeof request.componentState&&request.componentState.length>0?setState(request.componentState):advanceState()})}var _componentId,_unbindTransitionRequestListener,_componentState="inactive",_componentPreviousState="inactive",_uiComponentBroadcast=!0,_stateTransitions={};init(),angular.extend(scope,{getComponentId:getId,getComponentState:getState,setComponentState:setState,advanceState:advanceState,addStateTransition:addStateTransition})}}}}}angular.module("app").directive("uiComponent",uiComponentFactory),uiComponentFactory.$inject=["$rootScope","$timeout"]}(window,window.angular),function(window,angular,undefined){function uiTriggerFactory($rootScope){var TAG_NAMES={};return TAG_NAMES.ANCHOR="A",{restrict:"EA",scope:!1,link:function(scope,elem,attrs){function init(){attrs.uiTriggerFor&&(_targetComponentId=attrs.uiTriggerFor),attrs.uiTriggerState&&(_targetTriggerState=attrs.uiTriggerState),attrs.uiTriggerEvent&&(_event=attrs.uiTriggerEvent),attrs.uiTriggerDebounce&&(_targetDebounceDelay=parseInt(attrs.uiTriggerDebounce)),bindTriggerListeners(elem)}function bindTriggerListeners(elem){_targetComponentId&&elem.bind("click",broadcastStateChangeRequest),_event&&elem.bind("click",broadcastEvent)}function broadcastStateChangeRequest($event){if(isValidTriggerEvent($event)&&($event.stopImmediatePropagation(),_targetComponentId&&_targetHasDebounced)){var request={componentId:_targetComponentId,componentState:_targetTriggerState};$rootScope.$emit("app.component.didRequestStateChange",request),_targetDebounceDelay&&setDebounce()}}function setDebounce(){_targetHasDebounced=!1,$timeout(function(){_targetHasDebounced=!0},_targetDebounceDelay)}function broadcastEvent($event){isValidTriggerEvent($event)&&($event.stopImmediatePropagation(),_targetHasDebounced&&($rootScope.$emit(_event),_targetDebounceDelay&&setDebounce()))}function isValidTriggerEvent($event){return $event.target!==$event.currentTarget&&isValidAnchorNode($event.target)?!1:!0}function isValidAnchorNode(node){return!(node.tagName!==TAG_NAMES.ANCHOR||!node.href)}var _targetComponentId=null,_targetTriggerState=null,_targetDebounceDelay=0,_targetHasDebounced=!0,_event=null;init()}}}angular.module("app").directive("uiTrigger",uiTriggerFactory),uiTriggerFactory.$inject=["$rootScope"]}(window,window.angular),function(window,angular,undefined){function uiFollowFactory($rootScope){return{scope:!1,restrict:"EA",link:function(scope,elem,attrs){function init(){attrs.uiFollowFor&&(_targetComponentId=attrs.uiFollowFor),attrs.hasOwnProperty("uiFollowTrail")&&(_shouldTargetPreviousState=!0),setFollowListeners(elem)}function setFollowListeners(elem){$rootScope.$on("app.component.didChangeState",onDidChangeState)}function onDidChangeState(event,data){if(data.componentId!==_targetComponentId)return!1;var nextState=_shouldTargetPreviousState?data.componentPreviousState:data.componentState;scope.setComponentState(nextState,!0)}var _targetComponentId=null,_shouldTargetPreviousState=!1;init()}}}angular.module("app").directive("uiFollow",uiFollowFactory),uiFollowFactory.$inject=["$rootScope"]}(window,window.angular),function(window,angular,undefined){function uiModalFactory($http,$templateCache,paths){return{restrict:"EA",replace:!1,scope:{modalId:"@uiModalId",modalClass:"@uiModalClass",modalController:"@uiModalController",modalTemplateUrl:"=?uiModalTemplateUrl",modalHasDimmer:"=?uiModalHasDimmer"},templateUrl:paths.templates+"/components/global/tpl.ui-modal.html",compile:function(elem,attrs){return{pre:function(scope,elem,attrs){function toggleModalClass(className,shouldHaveClass){var classList=scope.modalClass.split(" "),classIndex=classList.indexOf(className),hasClass=-1!==classIndex;!hasClass&&shouldHaveClass?classList.push(className):hasClass&&!shouldHaveClass&&classList.splice(classIndex,1),scope.modalClass=classList.join(" ")}function init(){defaults={},defaults.modalClass="takeover",defaults.modalHasDimmer=!0,"undefined"==typeof scope.modalClass&&(scope.modalClass=defaults.modalClass),"undefined"==typeof scope.modalHasDimmer&&(scope.modalHasDimmer=defaults.modalHasDimmer),scope.$on("$destroy",scope.$watch("modalTemplateUrl",onChangeModalTemplateUrl))}function onChangeModalTemplateUrl(templateUrl){templateUrl&&fetchModalTemplate(templateUrl).success(onFetchModalTemplateSuccess)}function fetchModalTemplate(templateUrl){return $http.get(templateUrl,{cache:$templateCache})}function onFetchModalTemplateSuccess(templateString){scope.modalTemplate=templateString}var defaults;init(),angular.extend(scope,{toggleModalClass:toggleModalClass})}}}}}angular.module("app").directive("uiModal",uiModalFactory),uiModalFactory.$inject=["$http","$templateCache","paths"]}(window,window.angular),function(window,angular,undefined){function uiModalViewFactory($rootScope,$controller,$compile){return{restrict:"EA",replace:!1,scope:!1,priority:1,compile:function(elem,attrs){return{pre:function(scope,elem,attrs){function init(){scope.modalController&&$controller(scope.modalController,{$scope:scope}),scope.$watch("modalTemplate",renderModalTemplate)}function renderModalTemplate(templateString){templateString||(templateString=DEFAULT_MODAL_TEMPLATE);var linkFn=$compile(templateString),content=linkFn(scope);elem.empty();var container=elem;"tooltip"===scope.modalClass&&(container=angular.element('<section class="view-inner">'),elem.append(container)),container.append(content)}var DEFAULT_MODAL_TEMPLATE="<p>{{ ::modalId }}</p>";init()}}}}}angular.module("app").directive("uiModalView",uiModalViewFactory),uiModalViewFactory.$inject=["$rootScope","$controller","$compile"]}(window,window.angular),function(window,angular,undefined){function uiLockableFactory(){return{restrict:"A",scope:!1,link:function(scope,elem,attrs){function lock(){scope.isLocked=!0}function unlock(){scope.isLocked=!1}function init(){"undefined"==typeof scope.isLocked&&(scope.isLocked=!1)}init(),angular.extend(scope,{lock:lock,unlock:unlock})}}}angular.module("app").directive("uiLockable",uiLockableFactory),uiLockableFactory.$inject=[]}(window,window.angular),function(window,angular,undefined){function uiDismissableFactory($document,$timeout,paths){return{scope:!1,replace:!1,restrict:"EA",priority:1,link:function(scope,elem,attrs){function init(){KEYCODES={ESCAPE:27},node=elem[0],$document.on("click touchstart",onClick),$document.on("keydown keypress",onKeydown)}function onClick(event){"inactive"!==scope.getComponentState()&&(!node.contains(event.target)||event.target.hasAttribute("ui-trigger"))&&(event.stopImmediatePropagation(),
dismiss())}function onKeydown(event){"inactive"!==scope.getComponentState()&&event.keyCode===KEYCODES.ESCAPE&&(event.stopImmediatePropagation(),dismiss())}function dismiss(){$timeout(function(){scope.setComponentState("inactive")})}var KEYCODES,node;init()}}}angular.module("app").directive("uiDismissable",uiDismissableFactory),uiDismissableFactory.$inject=["$document","$timeout","paths"]}(window,window.angular),function(window,angular,undefined){function uiTableFactory($http,$templateCache,$timeout,paths){return{restrict:"EA",replace:!0,scope:{isStatic:"=?uiTableIsStatic",isCollapsible:"=?uiTableIsCollapsible",title:"@uiTableTitle",items:"=uiTableItems",itemSortBy:"=?uiTableItemSortBy",itemFilter:"=?uiTableItemFilter",itemFilterQuery:"=?uiTableItemFilterQuery",itemName:"@uiTableItemName",itemClass:"@uiTableItemClass",itemTrackBy:"@uiTableItemTrackBy",itemPreviewLimit:"@uiTableItemPreviewLimit",itemController:"@uiTableItemController",itemTemplate:"=?uiTableItemTemplate",itemTemplateUrl:"=?uiTableItemTemplateUrl",itemIsStatic:"=uiTableItemIsStatic",actionsBarController:"@uiTableActionsBarController",actionsBarTemplate:"=?uiTableActionsBarTemplate",actionsBarTemplateUrl:"=?uiTableActionsBarTemplateUrl"},templateUrl:paths.templates+"/components/global/tpl.ui-table.html",controller:"UITableController",controllerAs:"view",link:function(scope,elem,attrs){function init(){defaults={title:"",isCollapsible:!0,itemPreviewLimit:1/0,itemTrackBy:"",itemSortBy:"",itemSortDescending:!1,itemTemplate:"<section>{{ ::itemName }}</section>",actionsBarTemplate:"<section></section>"},angular.forEach(defaults,function(value,key){"undefined"==typeof scope[key]&&(scope[key]=value)}),scope.actionsBarTemplateUrl&&fetchTemplate(scope.actionsBarTemplateUrl).success(onFetchActionsBarTemplateSuccess)}function fetchTemplate(templateUrl){return $http.get(templateUrl,{cache:$templateCache})}function onFetchActionsBarTemplateSuccess(templateString){$timeout(function(){scope.actionsBarTemplate=templateString})}var defaults;init()}}}angular.module("app").directive("uiTable",uiTableFactory),uiTableFactory.$inject=["$http","$templateCache","$timeout","paths"]}(window,window.angular),function(window,angular,undefined){function uiTableActionsBarFactory($rootScope,$compile,$controller){return{restrict:"EA",replace:!0,scope:!1,link:function(scope,elem,attrs){function init(){scope.actionsBarController&&$controller(scope.actionsBarController,{$scope:scope}),scope.$watch("actionsBarTemplate",function(html){if(html){var linkFn=$compile(html),content=linkFn(scope),container=elem;container.empty().append(content)}})}init()}}}angular.module("app").directive("uiTableActionsBar",uiTableActionsBarFactory),uiTableActionsBarFactory.$inject=["$rootScope","$compile","$controller"]}(window,window.angular),function(window,angular,undefined){function uiTableRowFactory($rootScope,$controller,$compile){var MAX_ANIMATED_TABLE_ROW_INDEX=9;return{restrict:"EA",replace:!0,scope:!1,link:function(scope,elem,attrs){function init(){rowElem=elem.parent(),rowElem.toggleClass("no-animate",shouldSkipAnimation()),scope.itemController&&$controller(scope.itemController,{$scope:scope}),scope.$on("$destroy",scope.$watch("item",bindItemAlias)),scope.$on("$destroy",scope.$on("$destroy",onDestroy))}function bindItemAlias(item){scope.itemName&&(scope[scope.itemName]=item)}function shouldSkipAnimation(){return!!(scope.$index>MAX_ANIMATED_TABLE_ROW_INDEX)}function onDestroy(){rowElem.toggleClass("no-animate",shouldSkipAnimation())}var rowElem;init()}}}angular.module("app").directive("uiTableRow",uiTableRowFactory),uiTableRowFactory.$inject=["$rootScope","$controller","$compile"]}(window,window.angular),function(window,angular,undefined){function appendToFactory($route,$timeout,$document){return{restrict:"EA",replace:!1,scope:!1,link:function(scope,elem,attrs){function init(){attrs.appendTo||(attrs.appendTo="body"),_parent=angular.element($document.find(attrs.appendTo)),_parent&&$timeout(function(){_parent.append(elem)}),scope.$on("$routeChangeStart",onRouteChangeStart)}function onRouteChangeStart(){elem.remove()}var _parent;init()}}}angular.module("app").directive("appendTo",appendToFactory),appendToFactory.$inject=["$route","$timeout","$document"]}(window,window.angular),function(window,angular,undefined){function dynamicTemplateFactory($compile,$timeout){return{restrict:"EA",replace:!0,scope:!1,link:function(scope,elem,attrs){function init(){scope.$watch(function(){return scope.$eval(attrs.dynamicTemplate)},onChangeDynamicTemplate)}function onChangeDynamicTemplate(templateString){elem.empty(),templateString&&$compile(elem.html(templateString).contents())(scope)}init()}}}angular.module("app").directive("dynamicTemplate",dynamicTemplateFactory),dynamicTemplateFactory.$inject=["$compile","$timeout"]}(window,window.angular),function(window,angular,undefined){function smartBlurFactory($window,$timeout){return{scope:!1,replace:!1,restrict:"A",link:function(scope,elem,attrs){function init(){KEYCODES={ENTER:13},elem.on("keydown",onElementKeydown)}function onElementKeydown(e){switch(e.keyCode){case KEYCODES.ENTER:elem[0].blur(),e.preventDefault()}}var KEYCODES;init()}}}angular.module("app").directive("smartBlur",smartBlurFactory),smartBlurFactory.$inject=["$window","$timeout"]}(window,window.angular),function(window,angular,undefined){function displayForFactory($rootScope,$animate,$timeout,roles){return{scope:!1,replace:!1,restrict:"EA",priority:1,link:function(scope,elem,attrs){function init(){_permittedRoles=attrs.displayFor.split(/\s+/g),_hiddenClass="ng-hide",$rootScope.selectedTeam&&updateVisibility(),$rootScope.$on("session.teams.didSelectTeam",updateVisibility),$rootScope.$on("session.teams.didAcceptAgentTransfer",updateVisibility)}function updateVisibility(){var method=shouldDisplayForUser()?"removeClass":"addClass";$timeout(function(){$animate[method](elem,_hiddenClass)})}function getUserRole(){var selectedTeam=$rootScope.selectedTeam;return selectedTeam&&selectedTeam.userRole?selectedTeam.userRole.trim().toLowerCase():null}function shouldDisplayForUser(){var userRole=getUserRole();return!!(_permittedRoles.indexOf(userRole)>-1)}var _permittedRoles,_hiddenClass;init()}}}angular.module("app").directive("displayFor",displayForFactory),displayForFactory.$inject=["$rootScope","$animate","$timeout","roles"]}(window,window.angular),function(window,angular,undefined){function brandmarkFactory(paths){return{scope:!1,replace:!0,restrict:"E",templateUrl:paths.templates+"/components/tpl.brandmark.html"}}angular.module("app").directive("brandmark",brandmarkFactory),brandmarkFactory.$inject=["paths"]}(window,window.angular),function(window,angular,undefined){function desktopHeaderFactory(paths){return{scope:!1,replace:!0,restrict:"E",templateUrl:paths.templates+"/components/tpl.desktop-header.html"}}angular.module("app").directive("desktopHeader",desktopHeaderFactory),desktopHeaderFactory.$inject=["paths"]}(window,window.angular),function(window,angular,undefined){function mobileHeaderFactory(paths){return{scope:!1,replace:!0,restrict:"E",templateUrl:paths.templates+"/components/tpl.mobile-header.html"}}angular.module("app").directive("mobileHeader",mobileHeaderFactory),mobileHeaderFactory.$inject=["paths"]}(window,window.angular),function(window,angular,undefined){function sidebarFactory($rootScope,$window,$timeout,paths){return{scope:!1,restrict:"E",replace:!0,templateUrl:paths.templates+"/components/tpl.sidebar.html",link:function(scope,elem,attrs){function init(){$rootScope.$on("$routeChangeSuccess",onRouteChange),$window.addEventListener("resize",onWindowResize)}function onRouteChange(){scope.setComponentState("inactive")}function onWindowResize(){scope.setComponentState("inactive")}init()}}}angular.module("app").directive("sidebar",sidebarFactory),sidebarFactory.$inject=["$rootScope","$window","$timeout","paths"]}(window,window.angular),function(window,angular,undefined){function sidebarToggleFactory(paths){return{scope:!1,replace:!0,restrict:"E",templateUrl:paths.templates+"/components/tpl.sidebar-toggle.html"}}angular.module("app").directive("sidebarToggle",sidebarToggleFactory),sidebarToggleFactory.$inject=["paths"]}(window,window.angular),function(window,angular,undefined){function navigationMenuFactory(paths,user,externalUrls){return{scope:!0,replace:!0,restrict:"E",templateUrl:paths.templates+"/components/menus/tpl.navigation-menu.html",link:function(scope){scope.user=user,scope.externalUrls=externalUrls}}}angular.module("app").directive("navigationMenu",navigationMenuFactory),navigationMenuFactory.$inject=["paths","user","externalUrls"]}(window,window.angular),function(window,angular,undefined){function teamSelectMenuFactory(paths){return{scope:!0,replace:!0,restrict:"E",templateUrl:paths.templates+"/components/menus/tpl.team-select-menu.html",controller:"TeamSelectMenuController",controllerAs:"view"}}angular.module("app").directive("teamSelectMenu",teamSelectMenuFactory),teamSelectMenuFactory.$inject=["paths"]}(window,window.angular),function(window,angular,undefined){function userMenuToggleFactory(paths){return{scope:!1,replace:!0,restrict:"E",templateUrl:paths.templates+"/components/menus/tpl.user-menu-toggle.html"}}angular.module("app").directive("userMenuToggle",userMenuToggleFactory),userMenuToggleFactory.$inject=["paths"]}(window,window.angular),function(window,angular,undefined){function addressFormFactory($timeout,paths){return{scope:{addresses:"=addressList",addressInput:"=addressInput"},replace:!0,restrict:"E",templateUrl:paths.templates+"/components/forms/tpl.address-form.html",controller:"AddressFormController",controllerAs:"view",link:function(scope,elem,attrs){function init(){KEYCODES={SPACE:32,ENTER:13,BACKSPACE:8,TAB:9,DELETE:46,COMMA:188},_textInput=elem.find("input"),_textInput.on("keydown",onInputKeydown),_textInput.on("paste",onInputPaste),_textInput.on("blur",onInputBlur)}function isAddressStringComponent(address){return address.match(/@/)}function getSanitizedAddressString(addressString){addressString=addressString.trim();var captures=_addressSanitizeRe.exec(addressString);return captures?captures[1]:addressString}function onInputKeydown(e){var input;switch(e.keyCode){case KEYCODES.SPACE:case KEYCODES.ENTER:case KEYCODES.COMMA:scope.addressInput&&(input=getSanitizedAddressString(_textInput.val()),input&&$timeout(function(){scope.addAddressString(input),clearAddressInput()})),e.preventDefault();break;case KEYCODES.TAB:input=getSanitizedAddressString(_textInput.val()),input&&($timeout(function(){scope.addAddressString(input),clearAddressInput()}),e.preventDefault());break;case KEYCODES.BACKSPACE:case KEYCODES.DELETE:input=getSanitizedAddressString(_textInput.val()),input||($timeout(scope.removeAddress),e.preventDefault())}}function clearAddressInput(){scope.addressInput=""}function onInputPaste(e){var plainTextData=scope.addressInput+e.originalEvent.clipboardData.getData("text/plain"),addresses=plainTextData.split(_addressDelimeterRe).filter(isAddressStringComponent).map(getSanitizedAddressString);clearAddressInput(),$timeout(function(){angular.forEach(addresses,scope.addAddressString)}),e.preventDefault()}function onInputBlur(e){$timeout(function(){scope.addAddressString(),clearAddressInput()})}var KEYCODES,_textInput,_addressDelimeterRe=/[\s\r\n,]+/,_addressSanitizeRe=/<([\S]+@[\S]+)>/;init()}}}angular.module("app").directive("addressForm",addressFormFactory),addressFormFactory.$inject=["$timeout","paths"]}(window,window.angular),function(window,angular,undefined){function agreementFormFactory(paths){return{scope:!0,replace:!0,restrict:"E",templateUrl:paths.templates+"/components/forms/tpl.agreement-form.html",controller:"AgreementFormController",controllerAs:"view"}}angular.module("app").directive("agreementForm",agreementFormFactory),agreementFormFactory.$inject=["paths"]}(window,window.angular),function(window,angular,undefined){function agreementFrameFactory($compile){var compiledRoot;return{scope:{root:"=agreementFrameRoot",resolve:"=agreementFrameResolve"},replace:!1,restrict:"EA",link:function(scope,elem,attrs){function init(){scope.$watch("root",onChangeRoot),scope.$watch("resolve",onChangeResolve)}function onChangeRoot(root){root&&(compiledRoot=angular.element($compile(root)(scope)),elem.scrollTop(0).empty().append(compiledRoot))}function onChangeResolve(resolve,prevResolve){resolve&&(angular.forEach(prevResolve,function(value,key){delete scope[key]}),angular.extend(scope,resolve),onChangeRoot(compiledRoot))}init()}}}angular.module("app").directive("agreementFrame",agreementFrameFactory),agreementFrameFactory.$inject=["$compile"]}(window,window.angular),function(window,angular,undefined){function inviteFormFactory(paths){return{scope:!0,replace:!0,restrict:"E",templateUrl:paths.templates+"/components/forms/tpl.invite-form.html",controller:"InviteFormController",controllerAs:"view"}}angular.module("app").directive("inviteForm",inviteFormFactory),inviteFormFactory.$inject=["paths"]}(window,window.angular),function(window,angular,undefined){function renewalFormFactory(paths){return{scope:!0,replace:!0,restrict:"E",templateUrl:paths.templates+"/components/forms/tpl.renewal-form.html",controller:"RenewalFormController",controllerAs:"view"}}angular.module("app").directive("renewalForm",renewalFormFactory),renewalFormFactory.$inject=["paths"]}(window,window.angular),function(window,angular,undefined){function notificationFactory($http,$templateCache,$compile,$controller,paths){return{restrict:"EA",replace:!0,scope:{id:"@notificationId",priority:"=notificationPriority",controller:"@notificationController",templateUrl:"@notificationTemplateUrl",resolve:"=notificationResolve"},templateUrl:paths.templates+"/components/notifications/tpl.notification.html",link:function(scope,elem,attrs){function init(){scope.resolve&&(angular.forEach(scope.resolve,function(getter,key){scope[key]="function"==typeof getter?getter.call(scope):getter}),delete scope.resolve),scope.controller&&$controller(scope.controller,{$scope:scope}),scope.templateUrl&&fetchTemplate().success(compileAndRenderTemplate)}function fetchTemplate(){return $http.get(scope.templateUrl,{cache:$templateCache})}function compileAndRenderTemplate(html){if(html){var linkFn=$compile(html),content=linkFn(scope),container=elem;container.empty().append(content)}}init()}}}angular.module("app").directive("notification",notificationFactory),notificationFactory.$inject=["$http","$templateCache","$compile","$controller","paths"]}(window,window.angular),function(window,angular,undefined){function notificationBarFactory(paths){return{scope:!0,replace:!1,restrict:"E",templateUrl:paths.templates+"/components/notifications/tpl.notification-bar.html",controller:"NotificationBarController",controllerAs:"view"}}angular.module("app").directive("notificationBar",notificationBarFactory),notificationBarFactory.$inject=["paths"]}(window,window.angular);
//# sourceMappingURL=developer-account.min.js.map